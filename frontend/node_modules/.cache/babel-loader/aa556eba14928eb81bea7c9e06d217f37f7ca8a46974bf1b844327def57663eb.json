{"ast":null,"code":"var _jsxFileName = \"/Users/mdearaujo/Downloads/LETZ/frontend/src/pages/NotificationsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, Paper, List, ListItem, ListItemText, ListItemAvatar, ListItemSecondaryAction, Avatar, Button, IconButton, Chip, Divider, Alert, CircularProgress, Tabs, Tab, Badge } from '@mui/material';\nimport { Notifications as NotificationsIcon, Event as EventIcon, Person as PersonIcon, Message as MessageIcon, Check as CheckIcon, Close as CloseIcon, Delete as DeleteIcon, MarkEmailRead as MarkReadIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `notifications-tabpanel-${index}`,\n    \"aria-labelledby\": `notifications-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nfunction NotificationsPage() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tabValue, setTabValue] = useState(0);\n  useEffect(() => {\n    loadNotifications();\n  }, []);\n  const loadNotifications = async () => {\n    try {\n      setIsLoading(true);\n      // Aqui você faria a chamada para a API de notificações\n      // Por enquanto, vamos usar dados mockados\n      const mockNotifications = [{\n        id: 1,\n        type: 'EVENT_INVITE',\n        title: 'Convite para evento',\n        message: 'João Silva te convidou para \"Churrasco de Final de Semana\"',\n        isRead: false,\n        createdAt: '2024-01-15T10:30:00Z',\n        data: {\n          eventId: 1,\n          userId: 2\n        }\n      }, {\n        id: 2,\n        type: 'FRIEND_REQUEST',\n        title: 'Solicitação de amizade',\n        message: 'Maria Santos enviou uma solicitação de amizade',\n        isRead: false,\n        createdAt: '2024-01-14T15:45:00Z',\n        data: {\n          userId: 3,\n          friendshipId: 5\n        }\n      }, {\n        id: 3,\n        type: 'EVENT_UPDATE',\n        title: 'Evento atualizado',\n        message: 'O evento \"Festa de Aniversário\" foi atualizado',\n        isRead: true,\n        createdAt: '2024-01-13T09:15:00Z',\n        data: {\n          eventId: 2\n        }\n      }, {\n        id: 4,\n        type: 'MESSAGE',\n        title: 'Nova mensagem',\n        message: 'Pedro Costa enviou uma mensagem',\n        isRead: false,\n        createdAt: '2024-01-12T18:20:00Z',\n        data: {\n          userId: 4,\n          messageId: 10\n        }\n      }, {\n        id: 5,\n        type: 'SYSTEM',\n        title: 'Nova conquista!',\n        message: 'Você ganhou o badge \"Organizador\" por criar seu primeiro evento!',\n        isRead: true,\n        createdAt: '2024-01-11T12:00:00Z'\n      }];\n      setNotifications(mockNotifications);\n    } catch (error) {\n      console.error('Erro ao carregar notificações:', error);\n      setError('Erro ao carregar notificações');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleMarkAsRead = notificationId => {\n    setNotifications(prev => prev.map(notification => notification.id === notificationId ? {\n      ...notification,\n      isRead: true\n    } : notification));\n  };\n  const handleMarkAllAsRead = () => {\n    setNotifications(prev => prev.map(notification => ({\n      ...notification,\n      isRead: true\n    })));\n  };\n  const handleDeleteNotification = notificationId => {\n    setNotifications(prev => prev.filter(notification => notification.id !== notificationId));\n  };\n  const handleAcceptInvite = (notificationId, eventId) => {\n    // Aqui você faria a chamada para aceitar o convite\n    console.log('Aceitar convite para evento:', eventId);\n    handleMarkAsRead(notificationId);\n  };\n  const handleDeclineInvite = (notificationId, eventId) => {\n    // Aqui você faria a chamada para recusar o convite\n    console.log('Recusar convite para evento:', eventId);\n    handleDeleteNotification(notificationId);\n  };\n  const handleAcceptFriendRequest = (notificationId, friendshipId) => {\n    // Aqui você faria a chamada para aceitar a solicitação de amizade\n    console.log('Aceitar solicitação de amizade:', friendshipId);\n    handleDeleteNotification(notificationId);\n  };\n  const handleDeclineFriendRequest = (notificationId, friendshipId) => {\n    // Aqui você faria a chamada para recusar a solicitação de amizade\n    console.log('Recusar solicitação de amizade:', friendshipId);\n    handleDeleteNotification(notificationId);\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'EVENT_INVITE':\n      case 'EVENT_UPDATE':\n        return /*#__PURE__*/_jsxDEV(EventIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 16\n        }, this);\n      case 'FRIEND_REQUEST':\n        return /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 16\n        }, this);\n      case 'MESSAGE':\n        return /*#__PURE__*/_jsxDEV(MessageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getNotificationColor = type => {\n    switch (type) {\n      case 'EVENT_INVITE':\n        return 'primary';\n      case 'FRIEND_REQUEST':\n        return 'success';\n      case 'EVENT_UPDATE':\n        return 'info';\n      case 'MESSAGE':\n        return 'warning';\n      case 'SYSTEM':\n        return 'secondary';\n      default:\n        return 'default';\n    }\n  };\n  const renderNotificationActions = notification => {\n    var _notification$data, _notification$data2;\n    const actions = [];\n    if (notification.type === 'EVENT_INVITE' && (_notification$data = notification.data) !== null && _notification$data !== void 0 && _notification$data.eventId) {\n      actions.push(/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"success\",\n        onClick: () => handleAcceptInvite(notification.id, notification.data.eventId),\n        children: \"Aceitar\"\n      }, \"accept\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"error\",\n        onClick: () => handleDeclineInvite(notification.id, notification.data.eventId),\n        children: \"Recusar\"\n      }, \"decline\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this));\n    }\n    if (notification.type === 'FRIEND_REQUEST' && (_notification$data2 = notification.data) !== null && _notification$data2 !== void 0 && _notification$data2.friendshipId) {\n      actions.push(/*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        color: \"success\",\n        onClick: () => handleAcceptFriendRequest(notification.id, notification.data.friendshipId),\n        children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, \"accept-friend\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        color: \"error\",\n        onClick: () => handleDeclineFriendRequest(notification.id, notification.data.friendshipId),\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, \"decline-friend\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this));\n    }\n    if (!notification.isRead) {\n      actions.push(/*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        onClick: () => handleMarkAsRead(notification.id),\n        children: /*#__PURE__*/_jsxDEV(MarkReadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, \"mark-read\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this));\n    }\n    actions.push(/*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      color: \"error\",\n      onClick: () => handleDeleteNotification(notification.id),\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, \"delete\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this));\n    return actions;\n  };\n  const unreadNotifications = notifications.filter(n => !n.isRead);\n  const readNotifications = notifications.filter(n => n.isRead);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        py: 4,\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"\\uD83D\\uDD14 Notifica\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), unreadNotifications.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleMarkAllAsRead,\n        children: \"Marcar todas como lidas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: (e, newValue) => setTabValue(newValue),\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [\"N\\xE3o lidas\", unreadNotifications.length > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n                badgeContent: unreadNotifications.length,\n                color: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: `Lidas (${readNotifications.length})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: `Todas (${notifications.length})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [unreadNotifications.map((notification, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                bgcolor: 'action.hover',\n                borderLeft: 3,\n                borderColor: `${getNotificationColor(notification.type)}.main`\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  color: getNotificationColor(notification.type),\n                  children: getNotificationIcon(notification.type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: notification.title,\n                secondary: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: notification.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: new Date(notification.createdAt).toLocaleString('pt-BR')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1\n                  },\n                  children: renderNotificationActions(notification)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), index < unreadNotifications.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 60\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)), unreadNotifications.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Nenhuma notifica\\xE7\\xE3o n\\xE3o lida\",\n              secondary: \"Voc\\xEA est\\xE1 em dia com suas notifica\\xE7\\xF5es!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 1,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [readNotifications.map((notification, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  color: getNotificationColor(notification.type),\n                  children: getNotificationIcon(notification.type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: notification.title,\n                secondary: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: notification.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: new Date(notification.createdAt).toLocaleString('pt-BR')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  color: \"error\",\n                  onClick: () => handleDeleteNotification(notification.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), index < readNotifications.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 58\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)), readNotifications.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Nenhuma notifica\\xE7\\xE3o lida\",\n              secondary: \"As notifica\\xE7\\xF5es lidas aparecer\\xE3o aqui\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 2,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                bgcolor: notification.isRead ? 'transparent' : 'action.hover',\n                borderLeft: notification.isRead ? 0 : 3,\n                borderColor: `${getNotificationColor(notification.type)}.main`\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  color: getNotificationColor(notification.type),\n                  children: getNotificationIcon(notification.type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    children: notification.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this), !notification.isRead && /*#__PURE__*/_jsxDEV(Chip, {\n                    label: \"Nova\",\n                    size: \"small\",\n                    color: \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 23\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: notification.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: new Date(notification.createdAt).toLocaleString('pt-BR')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1\n                  },\n                  children: renderNotificationActions(notification)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), index < notifications.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 54\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationsPage, \"KDGxV3RpnxDJbYaiLlDNiVXwKeI=\");\n_c2 = NotificationsPage;\nexport default NotificationsPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"NotificationsPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","Paper","List","ListItem","ListItemText","ListItemAvatar","ListItemSecondaryAction","Avatar","Button","IconButton","Chip","Divider","Alert","CircularProgress","Tabs","Tab","Badge","Notifications","NotificationsIcon","Event","EventIcon","Person","PersonIcon","Message","MessageIcon","Check","CheckIcon","Close","CloseIcon","Delete","DeleteIcon","MarkEmailRead","MarkReadIcon","jsxDEV","_jsxDEV","TabPanel","props","children","value","index","other","role","hidden","id","sx","py","fileName","_jsxFileName","lineNumber","columnNumber","_c","NotificationsPage","_s","notifications","setNotifications","isLoading","setIsLoading","error","setError","tabValue","setTabValue","loadNotifications","mockNotifications","type","title","message","isRead","createdAt","data","eventId","userId","friendshipId","messageId","console","handleMarkAsRead","notificationId","prev","map","notification","handleMarkAllAsRead","handleDeleteNotification","filter","handleAcceptInvite","log","handleDeclineInvite","handleAcceptFriendRequest","handleDeclineFriendRequest","getNotificationIcon","getNotificationColor","renderNotificationActions","_notification$data","_notification$data2","actions","push","size","color","onClick","unreadNotifications","n","readNotifications","maxWidth","display","justifyContent","alignItems","mb","variant","component","length","severity","elevation","borderBottom","borderColor","onChange","e","newValue","label","gap","badgeContent","Fragment","bgcolor","borderLeft","primary","secondary","Date","toLocaleString","_c2","$RefreshReg$"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/src/pages/NotificationsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  Avatar,\n  Button,\n  IconButton,\n  Chip,\n  Divider,\n  Alert,\n  CircularProgress,\n  Tabs,\n  Tab,\n  Badge,\n} from '@mui/material';\nimport {\n  Notifications as NotificationsIcon,\n  Event as EventIcon,\n  Person as PersonIcon,\n  Message as MessageIcon,\n  Check as CheckIcon,\n  Close as CloseIcon,\n  Delete as DeleteIcon,\n  MarkEmailRead as MarkReadIcon,\n} from '@mui/icons-material';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\n\ninterface Notification {\n  id: number;\n  type: 'EVENT_INVITE' | 'FRIEND_REQUEST' | 'EVENT_UPDATE' | 'MESSAGE' | 'SYSTEM';\n  title: string;\n  message: string;\n  isRead: boolean;\n  createdAt: string;\n  data?: {\n    eventId?: number;\n    userId?: number;\n    friendshipId?: number;\n    messageId?: number;\n  };\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`notifications-tabpanel-${index}`}\n      aria-labelledby={`notifications-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction NotificationsPage() {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [tabValue, setTabValue] = useState(0);\n\n  useEffect(() => {\n    loadNotifications();\n  }, []);\n\n  const loadNotifications = async () => {\n    try {\n      setIsLoading(true);\n      // Aqui você faria a chamada para a API de notificações\n      // Por enquanto, vamos usar dados mockados\n      const mockNotifications: Notification[] = [\n        {\n          id: 1,\n          type: 'EVENT_INVITE',\n          title: 'Convite para evento',\n          message: 'João Silva te convidou para \"Churrasco de Final de Semana\"',\n          isRead: false,\n          createdAt: '2024-01-15T10:30:00Z',\n          data: { eventId: 1, userId: 2 },\n        },\n        {\n          id: 2,\n          type: 'FRIEND_REQUEST',\n          title: 'Solicitação de amizade',\n          message: 'Maria Santos enviou uma solicitação de amizade',\n          isRead: false,\n          createdAt: '2024-01-14T15:45:00Z',\n          data: { userId: 3, friendshipId: 5 },\n        },\n        {\n          id: 3,\n          type: 'EVENT_UPDATE',\n          title: 'Evento atualizado',\n          message: 'O evento \"Festa de Aniversário\" foi atualizado',\n          isRead: true,\n          createdAt: '2024-01-13T09:15:00Z',\n          data: { eventId: 2 },\n        },\n        {\n          id: 4,\n          type: 'MESSAGE',\n          title: 'Nova mensagem',\n          message: 'Pedro Costa enviou uma mensagem',\n          isRead: false,\n          createdAt: '2024-01-12T18:20:00Z',\n          data: { userId: 4, messageId: 10 },\n        },\n        {\n          id: 5,\n          type: 'SYSTEM',\n          title: 'Nova conquista!',\n          message: 'Você ganhou o badge \"Organizador\" por criar seu primeiro evento!',\n          isRead: true,\n          createdAt: '2024-01-11T12:00:00Z',\n        },\n      ];\n      \n      setNotifications(mockNotifications);\n    } catch (error) {\n      console.error('Erro ao carregar notificações:', error);\n      setError('Erro ao carregar notificações');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleMarkAsRead = (notificationId: number) => {\n    setNotifications(prev =>\n      prev.map(notification =>\n        notification.id === notificationId\n          ? { ...notification, isRead: true }\n          : notification\n      )\n    );\n  };\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(prev =>\n      prev.map(notification => ({ ...notification, isRead: true }))\n    );\n  };\n\n  const handleDeleteNotification = (notificationId: number) => {\n    setNotifications(prev =>\n      prev.filter(notification => notification.id !== notificationId)\n    );\n  };\n\n  const handleAcceptInvite = (notificationId: number, eventId: number) => {\n    // Aqui você faria a chamada para aceitar o convite\n    console.log('Aceitar convite para evento:', eventId);\n    handleMarkAsRead(notificationId);\n  };\n\n  const handleDeclineInvite = (notificationId: number, eventId: number) => {\n    // Aqui você faria a chamada para recusar o convite\n    console.log('Recusar convite para evento:', eventId);\n    handleDeleteNotification(notificationId);\n  };\n\n  const handleAcceptFriendRequest = (notificationId: number, friendshipId: number) => {\n    // Aqui você faria a chamada para aceitar a solicitação de amizade\n    console.log('Aceitar solicitação de amizade:', friendshipId);\n    handleDeleteNotification(notificationId);\n  };\n\n  const handleDeclineFriendRequest = (notificationId: number, friendshipId: number) => {\n    // Aqui você faria a chamada para recusar a solicitação de amizade\n    console.log('Recusar solicitação de amizade:', friendshipId);\n    handleDeleteNotification(notificationId);\n  };\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'EVENT_INVITE':\n      case 'EVENT_UPDATE':\n        return <EventIcon />;\n      case 'FRIEND_REQUEST':\n        return <PersonIcon />;\n      case 'MESSAGE':\n        return <MessageIcon />;\n      default:\n        return <NotificationsIcon />;\n    }\n  };\n\n  const getNotificationColor = (type: string) => {\n    switch (type) {\n      case 'EVENT_INVITE':\n        return 'primary';\n      case 'FRIEND_REQUEST':\n        return 'success';\n      case 'EVENT_UPDATE':\n        return 'info';\n      case 'MESSAGE':\n        return 'warning';\n      case 'SYSTEM':\n        return 'secondary';\n      default:\n        return 'default';\n    }\n  };\n\n  const renderNotificationActions = (notification: Notification) => {\n    const actions = [];\n\n    if (notification.type === 'EVENT_INVITE' && notification.data?.eventId) {\n      actions.push(\n        <Button\n          key=\"accept\"\n          size=\"small\"\n          color=\"success\"\n          onClick={() => handleAcceptInvite(notification.id, notification.data!.eventId!)}\n        >\n          Aceitar\n        </Button>,\n        <Button\n          key=\"decline\"\n          size=\"small\"\n          color=\"error\"\n          onClick={() => handleDeclineInvite(notification.id, notification.data!.eventId!)}\n        >\n          Recusar\n        </Button>\n      );\n    }\n\n    if (notification.type === 'FRIEND_REQUEST' && notification.data?.friendshipId) {\n      actions.push(\n        <IconButton\n          key=\"accept-friend\"\n          size=\"small\"\n          color=\"success\"\n          onClick={() => handleAcceptFriendRequest(notification.id, notification.data!.friendshipId!)}\n        >\n          <CheckIcon />\n        </IconButton>,\n        <IconButton\n          key=\"decline-friend\"\n          size=\"small\"\n          color=\"error\"\n          onClick={() => handleDeclineFriendRequest(notification.id, notification.data!.friendshipId!)}\n        >\n          <CloseIcon />\n        </IconButton>\n      );\n    }\n\n    if (!notification.isRead) {\n      actions.push(\n        <IconButton\n          key=\"mark-read\"\n          size=\"small\"\n          onClick={() => handleMarkAsRead(notification.id)}\n        >\n          <MarkReadIcon />\n        </IconButton>\n      );\n    }\n\n    actions.push(\n      <IconButton\n        key=\"delete\"\n        size=\"small\"\n        color=\"error\"\n        onClick={() => handleDeleteNotification(notification.id)}\n      >\n        <DeleteIcon />\n      </IconButton>\n    );\n\n    return actions;\n  };\n\n  const unreadNotifications = notifications.filter(n => !n.isRead);\n  const readNotifications = notifications.filter(n => n.isRead);\n\n  if (isLoading) {\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 4, display: 'flex', justifyContent: 'center' }}>\n        <CircularProgress />\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          🔔 Notificações\n        </Typography>\n        \n        {unreadNotifications.length > 0 && (\n          <Button\n            variant=\"outlined\"\n            onClick={handleMarkAllAsRead}\n          >\n            Marcar todas como lidas\n          </Button>\n        )}\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      <Paper elevation={3}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tabValue} onChange={(e, newValue) => setTabValue(newValue)}>\n            <Tab\n              label={\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                  Não lidas\n                  {unreadNotifications.length > 0 && (\n                    <Badge badgeContent={unreadNotifications.length} color=\"error\" />\n                  )}\n                </Box>\n              }\n            />\n            <Tab label={`Lidas (${readNotifications.length})`} />\n            <Tab label={`Todas (${notifications.length})`} />\n          </Tabs>\n        </Box>\n\n        <TabPanel value={tabValue} index={0}>\n          <List>\n            {unreadNotifications.map((notification, index) => (\n              <React.Fragment key={notification.id}>\n                <ListItem\n                  sx={{\n                    bgcolor: 'action.hover',\n                    borderLeft: 3,\n                    borderColor: `${getNotificationColor(notification.type)}.main`,\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Avatar color={getNotificationColor(notification.type) as any}>\n                      {getNotificationIcon(notification.type)}\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={notification.title}\n                    secondary={\n                      <Box>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {notification.message}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {new Date(notification.createdAt).toLocaleString('pt-BR')}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    <Box sx={{ display: 'flex', gap: 1 }}>\n                      {renderNotificationActions(notification)}\n                    </Box>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                {index < unreadNotifications.length - 1 && <Divider />}\n              </React.Fragment>\n            ))}\n            {unreadNotifications.length === 0 && (\n              <ListItem>\n                <ListItemText\n                  primary=\"Nenhuma notificação não lida\"\n                  secondary=\"Você está em dia com suas notificações!\"\n                />\n              </ListItem>\n            )}\n          </List>\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          <List>\n            {readNotifications.map((notification, index) => (\n              <React.Fragment key={notification.id}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar color={getNotificationColor(notification.type) as any}>\n                      {getNotificationIcon(notification.type)}\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={notification.title}\n                    secondary={\n                      <Box>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {notification.message}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {new Date(notification.createdAt).toLocaleString('pt-BR')}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      size=\"small\"\n                      color=\"error\"\n                      onClick={() => handleDeleteNotification(notification.id)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                {index < readNotifications.length - 1 && <Divider />}\n              </React.Fragment>\n            ))}\n            {readNotifications.length === 0 && (\n              <ListItem>\n                <ListItemText\n                  primary=\"Nenhuma notificação lida\"\n                  secondary=\"As notificações lidas aparecerão aqui\"\n                />\n              </ListItem>\n            )}\n          </List>\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={2}>\n          <List>\n            {notifications.map((notification, index) => (\n              <React.Fragment key={notification.id}>\n                <ListItem\n                  sx={{\n                    bgcolor: notification.isRead ? 'transparent' : 'action.hover',\n                    borderLeft: notification.isRead ? 0 : 3,\n                    borderColor: `${getNotificationColor(notification.type)}.main`,\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Avatar color={getNotificationColor(notification.type) as any}>\n                      {getNotificationIcon(notification.type)}\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Typography variant=\"subtitle1\">\n                          {notification.title}\n                        </Typography>\n                        {!notification.isRead && (\n                          <Chip label=\"Nova\" size=\"small\" color=\"error\" />\n                        )}\n                      </Box>\n                    }\n                    secondary={\n                      <Box>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {notification.message}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {new Date(notification.createdAt).toLocaleString('pt-BR')}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    <Box sx={{ display: 'flex', gap: 1 }}>\n                      {renderNotificationActions(notification)}\n                    </Box>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                {index < notifications.length - 1 && <Divider />}\n              </React.Fragment>\n            ))}\n          </List>\n        </TabPanel>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default NotificationsPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,SAAS,EACTC,UAAU,EACVC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,cAAc,EACdC,uBAAuB,EACvBC,MAAM,EACNC,MAAM,EACNC,UAAU,EACVC,IAAI,EACJC,OAAO,EACPC,KAAK,EACLC,gBAAgB,EAChBC,IAAI,EACJC,GAAG,EACHC,KAAK,QACA,eAAe;AACtB,SACEC,aAAa,IAAIC,iBAAiB,EAClCC,KAAK,IAAIC,SAAS,EAClBC,MAAM,IAAIC,UAAU,EACpBC,OAAO,IAAIC,WAAW,EACtBC,KAAK,IAAIC,SAAS,EAClBC,KAAK,IAAIC,SAAS,EAClBC,MAAM,IAAIC,UAAU,EACpBC,aAAa,IAAIC,YAAY,QACxB,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAwB7B,SAASC,QAAQA,CAACC,KAAoB,EAAE;EACtC,MAAM;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,KAAK;IAAE,GAAGC;EAAM,CAAC,GAAGJ,KAAK;EAClD,oBACEF,OAAA;IACEO,IAAI,EAAC,UAAU;IACfC,MAAM,EAAEJ,KAAK,KAAKC,KAAM;IACxBI,EAAE,EAAE,0BAA0BJ,KAAK,EAAG;IACtC,mBAAiB,qBAAqBA,KAAK,EAAG;IAAA,GAC1CC,KAAK;IAAAH,QAAA,EAERC,KAAK,KAAKC,KAAK,iBAAIL,OAAA,CAACpC,GAAG;MAAC8C,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAR,QAAA,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAACC,EAAA,GAbQf,QAAQ;AAejB,SAASgB,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1D,QAAQ,CAAiB,EAAE,CAAC;EACtE,MAAM,CAAC2D,SAAS,EAAEC,YAAY,CAAC,GAAG5D,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC6D,KAAK,EAAEC,QAAQ,CAAC,GAAG9D,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAAC+D,QAAQ,EAAEC,WAAW,CAAC,GAAGhE,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACdgE,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACFL,YAAY,CAAC,IAAI,CAAC;MAClB;MACA;MACA,MAAMM,iBAAiC,GAAG,CACxC;QACEnB,EAAE,EAAE,CAAC;QACLoB,IAAI,EAAE,cAAc;QACpBC,KAAK,EAAE,qBAAqB;QAC5BC,OAAO,EAAE,4DAA4D;QACrEC,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,sBAAsB;QACjCC,IAAI,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE;MAChC,CAAC,EACD;QACE3B,EAAE,EAAE,CAAC;QACLoB,IAAI,EAAE,gBAAgB;QACtBC,KAAK,EAAE,wBAAwB;QAC/BC,OAAO,EAAE,gDAAgD;QACzDC,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,sBAAsB;QACjCC,IAAI,EAAE;UAAEE,MAAM,EAAE,CAAC;UAAEC,YAAY,EAAE;QAAE;MACrC,CAAC,EACD;QACE5B,EAAE,EAAE,CAAC;QACLoB,IAAI,EAAE,cAAc;QACpBC,KAAK,EAAE,mBAAmB;QAC1BC,OAAO,EAAE,gDAAgD;QACzDC,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,sBAAsB;QACjCC,IAAI,EAAE;UAAEC,OAAO,EAAE;QAAE;MACrB,CAAC,EACD;QACE1B,EAAE,EAAE,CAAC;QACLoB,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,eAAe;QACtBC,OAAO,EAAE,iCAAiC;QAC1CC,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,sBAAsB;QACjCC,IAAI,EAAE;UAAEE,MAAM,EAAE,CAAC;UAAEE,SAAS,EAAE;QAAG;MACnC,CAAC,EACD;QACE7B,EAAE,EAAE,CAAC;QACLoB,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE,iBAAiB;QACxBC,OAAO,EAAE,kEAAkE;QAC3EC,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE;MACb,CAAC,CACF;MAEDb,gBAAgB,CAACQ,iBAAiB,CAAC;IACrC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdgB,OAAO,CAAChB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDC,QAAQ,CAAC,+BAA+B,CAAC;IAC3C,CAAC,SAAS;MACRF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMkB,gBAAgB,GAAIC,cAAsB,IAAK;IACnDrB,gBAAgB,CAACsB,IAAI,IACnBA,IAAI,CAACC,GAAG,CAACC,YAAY,IACnBA,YAAY,CAACnC,EAAE,KAAKgC,cAAc,GAC9B;MAAE,GAAGG,YAAY;MAAEZ,MAAM,EAAE;IAAK,CAAC,GACjCY,YACN,CACF,CAAC;EACH,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCzB,gBAAgB,CAACsB,IAAI,IACnBA,IAAI,CAACC,GAAG,CAACC,YAAY,KAAK;MAAE,GAAGA,YAAY;MAAEZ,MAAM,EAAE;IAAK,CAAC,CAAC,CAC9D,CAAC;EACH,CAAC;EAED,MAAMc,wBAAwB,GAAIL,cAAsB,IAAK;IAC3DrB,gBAAgB,CAACsB,IAAI,IACnBA,IAAI,CAACK,MAAM,CAACH,YAAY,IAAIA,YAAY,CAACnC,EAAE,KAAKgC,cAAc,CAChE,CAAC;EACH,CAAC;EAED,MAAMO,kBAAkB,GAAGA,CAACP,cAAsB,EAAEN,OAAe,KAAK;IACtE;IACAI,OAAO,CAACU,GAAG,CAAC,8BAA8B,EAAEd,OAAO,CAAC;IACpDK,gBAAgB,CAACC,cAAc,CAAC;EAClC,CAAC;EAED,MAAMS,mBAAmB,GAAGA,CAACT,cAAsB,EAAEN,OAAe,KAAK;IACvE;IACAI,OAAO,CAACU,GAAG,CAAC,8BAA8B,EAAEd,OAAO,CAAC;IACpDW,wBAAwB,CAACL,cAAc,CAAC;EAC1C,CAAC;EAED,MAAMU,yBAAyB,GAAGA,CAACV,cAAsB,EAAEJ,YAAoB,KAAK;IAClF;IACAE,OAAO,CAACU,GAAG,CAAC,iCAAiC,EAAEZ,YAAY,CAAC;IAC5DS,wBAAwB,CAACL,cAAc,CAAC;EAC1C,CAAC;EAED,MAAMW,0BAA0B,GAAGA,CAACX,cAAsB,EAAEJ,YAAoB,KAAK;IACnF;IACAE,OAAO,CAACU,GAAG,CAAC,iCAAiC,EAAEZ,YAAY,CAAC;IAC5DS,wBAAwB,CAACL,cAAc,CAAC;EAC1C,CAAC;EAED,MAAMY,mBAAmB,GAAIxB,IAAY,IAAK;IAC5C,QAAQA,IAAI;MACV,KAAK,cAAc;MACnB,KAAK,cAAc;QACjB,oBAAO7B,OAAA,CAACd,SAAS;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtB,KAAK,gBAAgB;QACnB,oBAAOf,OAAA,CAACZ,UAAU;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvB,KAAK,SAAS;QACZ,oBAAOf,OAAA,CAACV,WAAW;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACxB;QACE,oBAAOf,OAAA,CAAChB,iBAAiB;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAChC;EACF,CAAC;EAED,MAAMuC,oBAAoB,GAAIzB,IAAY,IAAK;IAC7C,QAAQA,IAAI;MACV,KAAK,cAAc;QACjB,OAAO,SAAS;MAClB,KAAK,gBAAgB;QACnB,OAAO,SAAS;MAClB,KAAK,cAAc;QACjB,OAAO,MAAM;MACf,KAAK,SAAS;QACZ,OAAO,SAAS;MAClB,KAAK,QAAQ;QACX,OAAO,WAAW;MACpB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,MAAM0B,yBAAyB,GAAIX,YAA0B,IAAK;IAAA,IAAAY,kBAAA,EAAAC,mBAAA;IAChE,MAAMC,OAAO,GAAG,EAAE;IAElB,IAAId,YAAY,CAACf,IAAI,KAAK,cAAc,KAAA2B,kBAAA,GAAIZ,YAAY,CAACV,IAAI,cAAAsB,kBAAA,eAAjBA,kBAAA,CAAmBrB,OAAO,EAAE;MACtEuB,OAAO,CAACC,IAAI,cACV3D,OAAA,CAAC1B,MAAM;QAELsF,IAAI,EAAC,OAAO;QACZC,KAAK,EAAC,SAAS;QACfC,OAAO,EAAEA,CAAA,KAAMd,kBAAkB,CAACJ,YAAY,CAACnC,EAAE,EAAEmC,YAAY,CAACV,IAAI,CAAEC,OAAQ,CAAE;QAAAhC,QAAA,EACjF;MAED,GANM,QAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMN,CAAC,eACTf,OAAA,CAAC1B,MAAM;QAELsF,IAAI,EAAC,OAAO;QACZC,KAAK,EAAC,OAAO;QACbC,OAAO,EAAEA,CAAA,KAAMZ,mBAAmB,CAACN,YAAY,CAACnC,EAAE,EAAEmC,YAAY,CAACV,IAAI,CAAEC,OAAQ,CAAE;QAAAhC,QAAA,EAClF;MAED,GANM,SAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMP,CACV,CAAC;IACH;IAEA,IAAI6B,YAAY,CAACf,IAAI,KAAK,gBAAgB,KAAA4B,mBAAA,GAAIb,YAAY,CAACV,IAAI,cAAAuB,mBAAA,eAAjBA,mBAAA,CAAmBpB,YAAY,EAAE;MAC7EqB,OAAO,CAACC,IAAI,cACV3D,OAAA,CAACzB,UAAU;QAETqF,IAAI,EAAC,OAAO;QACZC,KAAK,EAAC,SAAS;QACfC,OAAO,EAAEA,CAAA,KAAMX,yBAAyB,CAACP,YAAY,CAACnC,EAAE,EAAEmC,YAAY,CAACV,IAAI,CAAEG,YAAa,CAAE;QAAAlC,QAAA,eAE5FH,OAAA,CAACR,SAAS;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GALT,eAAe;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT,CAAC,eACbf,OAAA,CAACzB,UAAU;QAETqF,IAAI,EAAC,OAAO;QACZC,KAAK,EAAC,OAAO;QACbC,OAAO,EAAEA,CAAA,KAAMV,0BAA0B,CAACR,YAAY,CAACnC,EAAE,EAAEmC,YAAY,CAACV,IAAI,CAAEG,YAAa,CAAE;QAAAlC,QAAA,eAE7FH,OAAA,CAACN,SAAS;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GALT,gBAAgB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACd,CAAC;IACH;IAEA,IAAI,CAAC6B,YAAY,CAACZ,MAAM,EAAE;MACxB0B,OAAO,CAACC,IAAI,cACV3D,OAAA,CAACzB,UAAU;QAETqF,IAAI,EAAC,OAAO;QACZE,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAACI,YAAY,CAACnC,EAAE,CAAE;QAAAN,QAAA,eAEjDH,OAAA,CAACF,YAAY;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAJZ,WAAW;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKL,CACd,CAAC;IACH;IAEA2C,OAAO,CAACC,IAAI,cACV3D,OAAA,CAACzB,UAAU;MAETqF,IAAI,EAAC,OAAO;MACZC,KAAK,EAAC,OAAO;MACbC,OAAO,EAAEA,CAAA,KAAMhB,wBAAwB,CAACF,YAAY,CAACnC,EAAE,CAAE;MAAAN,QAAA,eAEzDH,OAAA,CAACJ,UAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GALV,QAAQ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMF,CACd,CAAC;IAED,OAAO2C,OAAO;EAChB,CAAC;EAED,MAAMK,mBAAmB,GAAG5C,aAAa,CAAC4B,MAAM,CAACiB,CAAC,IAAI,CAACA,CAAC,CAAChC,MAAM,CAAC;EAChE,MAAMiC,iBAAiB,GAAG9C,aAAa,CAAC4B,MAAM,CAACiB,CAAC,IAAIA,CAAC,CAAChC,MAAM,CAAC;EAE7D,IAAIX,SAAS,EAAE;IACb,oBACErB,OAAA,CAACnC,SAAS;MAACqG,QAAQ,EAAC,IAAI;MAACxD,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEwD,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAjE,QAAA,eAChFH,OAAA,CAACrB,gBAAgB;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAEhB;EAEA,oBACEf,OAAA,CAACnC,SAAS;IAACqG,QAAQ,EAAC,IAAI;IAACxD,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAR,QAAA,gBACrCH,OAAA,CAACpC,GAAG;MAAC8C,EAAE,EAAE;QAAEyD,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAnE,QAAA,gBACzFH,OAAA,CAAClC,UAAU;QAACyG,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAAArE,QAAA,EAAC;MAExC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EAEZgD,mBAAmB,CAACU,MAAM,GAAG,CAAC,iBAC7BzE,OAAA,CAAC1B,MAAM;QACLiG,OAAO,EAAC,UAAU;QAClBT,OAAO,EAAEjB,mBAAoB;QAAA1C,QAAA,EAC9B;MAED;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELQ,KAAK,iBACJvB,OAAA,CAACtB,KAAK;MAACgG,QAAQ,EAAC,OAAO;MAAChE,EAAE,EAAE;QAAE4D,EAAE,EAAE;MAAE,CAAE;MAAAnE,QAAA,EACnCoB;IAAK;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAEDf,OAAA,CAACjC,KAAK;MAAC4G,SAAS,EAAE,CAAE;MAAAxE,QAAA,gBAClBH,OAAA,CAACpC,GAAG;QAAC8C,EAAE,EAAE;UAAEkE,YAAY,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAU,CAAE;QAAA1E,QAAA,eACnDH,OAAA,CAACpB,IAAI;UAACwB,KAAK,EAAEqB,QAAS;UAACqD,QAAQ,EAAEA,CAACC,CAAC,EAAEC,QAAQ,KAAKtD,WAAW,CAACsD,QAAQ,CAAE;UAAA7E,QAAA,gBACtEH,OAAA,CAACnB,GAAG;YACFoG,KAAK,eACHjF,OAAA,CAACpC,GAAG;cAAC8C,EAAE,EAAE;gBAAEyD,OAAO,EAAE,MAAM;gBAAEE,UAAU,EAAE,QAAQ;gBAAEa,GAAG,EAAE;cAAE,CAAE;cAAA/E,QAAA,GAAC,cAE1D,EAAC4D,mBAAmB,CAACU,MAAM,GAAG,CAAC,iBAC7BzE,OAAA,CAAClB,KAAK;gBAACqG,YAAY,EAAEpB,mBAAmB,CAACU,MAAO;gBAACZ,KAAK,EAAC;cAAO;gBAAAjD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CACjE;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFf,OAAA,CAACnB,GAAG;YAACoG,KAAK,EAAE,UAAUhB,iBAAiB,CAACQ,MAAM;UAAI;YAAA7D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACrDf,OAAA,CAACnB,GAAG;YAACoG,KAAK,EAAE,UAAU9D,aAAa,CAACsD,MAAM;UAAI;YAAA7D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAENf,OAAA,CAACC,QAAQ;QAACG,KAAK,EAAEqB,QAAS;QAACpB,KAAK,EAAE,CAAE;QAAAF,QAAA,eAClCH,OAAA,CAAChC,IAAI;UAAAmC,QAAA,GACF4D,mBAAmB,CAACpB,GAAG,CAAC,CAACC,YAAY,EAAEvC,KAAK,kBAC3CL,OAAA,CAACvC,KAAK,CAAC2H,QAAQ;YAAAjF,QAAA,gBACbH,OAAA,CAAC/B,QAAQ;cACPyC,EAAE,EAAE;gBACF2E,OAAO,EAAE,cAAc;gBACvBC,UAAU,EAAE,CAAC;gBACbT,WAAW,EAAE,GAAGvB,oBAAoB,CAACV,YAAY,CAACf,IAAI,CAAC;cACzD,CAAE;cAAA1B,QAAA,gBAEFH,OAAA,CAAC7B,cAAc;gBAAAgC,QAAA,eACbH,OAAA,CAAC3B,MAAM;kBAACwF,KAAK,EAAEP,oBAAoB,CAACV,YAAY,CAACf,IAAI,CAAS;kBAAA1B,QAAA,EAC3DkD,mBAAmB,CAACT,YAAY,CAACf,IAAI;gBAAC;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC,eACjBf,OAAA,CAAC9B,YAAY;gBACXqH,OAAO,EAAE3C,YAAY,CAACd,KAAM;gBAC5B0D,SAAS,eACPxF,OAAA,CAACpC,GAAG;kBAAAuC,QAAA,gBACFH,OAAA,CAAClC,UAAU;oBAACyG,OAAO,EAAC,OAAO;oBAACV,KAAK,EAAC,gBAAgB;oBAAA1D,QAAA,EAC/CyC,YAAY,CAACb;kBAAO;oBAAAnB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX,CAAC,eACbf,OAAA,CAAClC,UAAU;oBAACyG,OAAO,EAAC,SAAS;oBAACV,KAAK,EAAC,gBAAgB;oBAAA1D,QAAA,EACjD,IAAIsF,IAAI,CAAC7C,YAAY,CAACX,SAAS,CAAC,CAACyD,cAAc,CAAC,OAAO;kBAAC;oBAAA9E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/C,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACFf,OAAA,CAAC5B,uBAAuB;gBAAA+B,QAAA,eACtBH,OAAA,CAACpC,GAAG;kBAAC8C,EAAE,EAAE;oBAAEyD,OAAO,EAAE,MAAM;oBAAEe,GAAG,EAAE;kBAAE,CAAE;kBAAA/E,QAAA,EAClCoD,yBAAyB,CAACX,YAAY;gBAAC;kBAAAhC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACiB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,EACVV,KAAK,GAAG0D,mBAAmB,CAACU,MAAM,GAAG,CAAC,iBAAIzE,OAAA,CAACvB,OAAO;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,GAhCnC6B,YAAY,CAACnC,EAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiCpB,CACjB,CAAC,EACDgD,mBAAmB,CAACU,MAAM,KAAK,CAAC,iBAC/BzE,OAAA,CAAC/B,QAAQ;YAAAkC,QAAA,eACPH,OAAA,CAAC9B,YAAY;cACXqH,OAAO,EAAC,uCAA8B;cACtCC,SAAS,EAAC;YAAyC;cAAA5E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEXf,OAAA,CAACC,QAAQ;QAACG,KAAK,EAAEqB,QAAS;QAACpB,KAAK,EAAE,CAAE;QAAAF,QAAA,eAClCH,OAAA,CAAChC,IAAI;UAAAmC,QAAA,GACF8D,iBAAiB,CAACtB,GAAG,CAAC,CAACC,YAAY,EAAEvC,KAAK,kBACzCL,OAAA,CAACvC,KAAK,CAAC2H,QAAQ;YAAAjF,QAAA,gBACbH,OAAA,CAAC/B,QAAQ;cAAAkC,QAAA,gBACPH,OAAA,CAAC7B,cAAc;gBAAAgC,QAAA,eACbH,OAAA,CAAC3B,MAAM;kBAACwF,KAAK,EAAEP,oBAAoB,CAACV,YAAY,CAACf,IAAI,CAAS;kBAAA1B,QAAA,EAC3DkD,mBAAmB,CAACT,YAAY,CAACf,IAAI;gBAAC;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC,eACjBf,OAAA,CAAC9B,YAAY;gBACXqH,OAAO,EAAE3C,YAAY,CAACd,KAAM;gBAC5B0D,SAAS,eACPxF,OAAA,CAACpC,GAAG;kBAAAuC,QAAA,gBACFH,OAAA,CAAClC,UAAU;oBAACyG,OAAO,EAAC,OAAO;oBAACV,KAAK,EAAC,gBAAgB;oBAAA1D,QAAA,EAC/CyC,YAAY,CAACb;kBAAO;oBAAAnB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX,CAAC,eACbf,OAAA,CAAClC,UAAU;oBAACyG,OAAO,EAAC,SAAS;oBAACV,KAAK,EAAC,gBAAgB;oBAAA1D,QAAA,EACjD,IAAIsF,IAAI,CAAC7C,YAAY,CAACX,SAAS,CAAC,CAACyD,cAAc,CAAC,OAAO;kBAAC;oBAAA9E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/C,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACFf,OAAA,CAAC5B,uBAAuB;gBAAA+B,QAAA,eACtBH,OAAA,CAACzB,UAAU;kBACTqF,IAAI,EAAC,OAAO;kBACZC,KAAK,EAAC,OAAO;kBACbC,OAAO,EAAEA,CAAA,KAAMhB,wBAAwB,CAACF,YAAY,CAACnC,EAAE,CAAE;kBAAAN,QAAA,eAEzDH,OAAA,CAACJ,UAAU;oBAAAgB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,EACVV,KAAK,GAAG4D,iBAAiB,CAACQ,MAAM,GAAG,CAAC,iBAAIzE,OAAA,CAACvB,OAAO;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,GA9BjC6B,YAAY,CAACnC,EAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA+BpB,CACjB,CAAC,EACDkD,iBAAiB,CAACQ,MAAM,KAAK,CAAC,iBAC7BzE,OAAA,CAAC/B,QAAQ;YAAAkC,QAAA,eACPH,OAAA,CAAC9B,YAAY;cACXqH,OAAO,EAAC,gCAA0B;cAClCC,SAAS,EAAC;YAAuC;cAAA5E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEXf,OAAA,CAACC,QAAQ;QAACG,KAAK,EAAEqB,QAAS;QAACpB,KAAK,EAAE,CAAE;QAAAF,QAAA,eAClCH,OAAA,CAAChC,IAAI;UAAAmC,QAAA,EACFgB,aAAa,CAACwB,GAAG,CAAC,CAACC,YAAY,EAAEvC,KAAK,kBACrCL,OAAA,CAACvC,KAAK,CAAC2H,QAAQ;YAAAjF,QAAA,gBACbH,OAAA,CAAC/B,QAAQ;cACPyC,EAAE,EAAE;gBACF2E,OAAO,EAAEzC,YAAY,CAACZ,MAAM,GAAG,aAAa,GAAG,cAAc;gBAC7DsD,UAAU,EAAE1C,YAAY,CAACZ,MAAM,GAAG,CAAC,GAAG,CAAC;gBACvC6C,WAAW,EAAE,GAAGvB,oBAAoB,CAACV,YAAY,CAACf,IAAI,CAAC;cACzD,CAAE;cAAA1B,QAAA,gBAEFH,OAAA,CAAC7B,cAAc;gBAAAgC,QAAA,eACbH,OAAA,CAAC3B,MAAM;kBAACwF,KAAK,EAAEP,oBAAoB,CAACV,YAAY,CAACf,IAAI,CAAS;kBAAA1B,QAAA,EAC3DkD,mBAAmB,CAACT,YAAY,CAACf,IAAI;gBAAC;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC,eACjBf,OAAA,CAAC9B,YAAY;gBACXqH,OAAO,eACLvF,OAAA,CAACpC,GAAG;kBAAC8C,EAAE,EAAE;oBAAEyD,OAAO,EAAE,MAAM;oBAAEE,UAAU,EAAE,QAAQ;oBAAEa,GAAG,EAAE;kBAAE,CAAE;kBAAA/E,QAAA,gBACzDH,OAAA,CAAClC,UAAU;oBAACyG,OAAO,EAAC,WAAW;oBAAApE,QAAA,EAC5ByC,YAAY,CAACd;kBAAK;oBAAAlB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC,EACZ,CAAC6B,YAAY,CAACZ,MAAM,iBACnBhC,OAAA,CAACxB,IAAI;oBAACyG,KAAK,EAAC,MAAM;oBAACrB,IAAI,EAAC,OAAO;oBAACC,KAAK,EAAC;kBAAO;oBAAAjD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAChD;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CACN;gBACDyE,SAAS,eACPxF,OAAA,CAACpC,GAAG;kBAAAuC,QAAA,gBACFH,OAAA,CAAClC,UAAU;oBAACyG,OAAO,EAAC,OAAO;oBAACV,KAAK,EAAC,gBAAgB;oBAAA1D,QAAA,EAC/CyC,YAAY,CAACb;kBAAO;oBAAAnB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX,CAAC,eACbf,OAAA,CAAClC,UAAU;oBAACyG,OAAO,EAAC,SAAS;oBAACV,KAAK,EAAC,gBAAgB;oBAAA1D,QAAA,EACjD,IAAIsF,IAAI,CAAC7C,YAAY,CAACX,SAAS,CAAC,CAACyD,cAAc,CAAC,OAAO;kBAAC;oBAAA9E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/C,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACFf,OAAA,CAAC5B,uBAAuB;gBAAA+B,QAAA,eACtBH,OAAA,CAACpC,GAAG;kBAAC8C,EAAE,EAAE;oBAAEyD,OAAO,EAAE,MAAM;oBAAEe,GAAG,EAAE;kBAAE,CAAE;kBAAA/E,QAAA,EAClCoD,yBAAyB,CAACX,YAAY;gBAAC;kBAAAhC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACiB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,EACVV,KAAK,GAAGc,aAAa,CAACsD,MAAM,GAAG,CAAC,iBAAIzE,OAAA,CAACvB,OAAO;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,GAzC7B6B,YAAY,CAACnC,EAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA0CpB,CACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB;AAACG,EAAA,CAnaQD,iBAAiB;AAAA0E,GAAA,GAAjB1E,iBAAiB;AAqa1B,eAAeA,iBAAiB;AAAC,IAAAD,EAAA,EAAA2E,GAAA;AAAAC,YAAA,CAAA5E,EAAA;AAAA4E,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}