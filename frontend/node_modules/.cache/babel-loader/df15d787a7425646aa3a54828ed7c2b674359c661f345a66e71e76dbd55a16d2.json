{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import authSlice from'./slices/authSlice';import eventSlice from'./slices/eventSlice';import friendshipSlice from'./slices/friendshipSlice';import uiSlice from'./slices/uiSlice';export const store=configureStore({reducer:{auth:authSlice,events:eventSlice,friendships:friendshipSlice,ui:uiSlice},middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:{ignoredActions:['persist/PERSIST']}})});","map":{"version":3,"names":["configureStore","authSlice","eventSlice","friendshipSlice","uiSlice","store","reducer","auth","events","friendships","ui","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/src/store/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authSlice from './slices/authSlice';\nimport eventSlice from './slices/eventSlice';\nimport friendshipSlice from './slices/friendshipSlice';\nimport uiSlice from './slices/uiSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    events: eventSlice,\n    friendships: friendshipSlice,\n    ui: uiSlice,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST'],\n      },\n    }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch; "],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,SAAS,KAAM,oBAAoB,CAC1C,MAAO,CAAAC,UAAU,KAAM,qBAAqB,CAC5C,MAAO,CAAAC,eAAe,KAAM,0BAA0B,CACtD,MAAO,CAAAC,OAAO,KAAM,kBAAkB,CAEtC,MAAO,MAAM,CAAAC,KAAK,CAAGL,cAAc,CAAC,CAClCM,OAAO,CAAE,CACPC,IAAI,CAAEN,SAAS,CACfO,MAAM,CAAEN,UAAU,CAClBO,WAAW,CAAEN,eAAe,CAC5BO,EAAE,CAAEN,OACN,CAAC,CACDO,UAAU,CAAGC,oBAAoB,EAC/BA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAAC,iBAAiB,CACpC,CACF,CAAC,CACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}