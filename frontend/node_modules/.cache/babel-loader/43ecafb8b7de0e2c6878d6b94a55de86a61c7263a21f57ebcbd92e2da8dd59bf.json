{"ast":null,"code":"import axios from'axios';// Configuração base do axios\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5005/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Interceptor para adicionar token de autenticação\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Interceptor para tratar respostas\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});// Tipos para as requisições\n// APIs de autenticação\nexport const authAPI={login:data=>api.post('/auth/login',data),register:data=>api.post('/auth/register',data)};// APIs de usuários\nexport const userAPI={getProfile:()=>api.get('/users/me'),updateProfile:data=>api.put('/users/me',data),searchUsers:searchTerm=>api.get(\"/users/search?q=\".concat(searchTerm)),getRanking:()=>api.get('/users/ranking'),getUserById:id=>api.get(\"/users/\".concat(id))};// APIs de eventos\nexport const eventAPI={createEvent:data=>api.post('/events',data),getMyEvents:()=>api.get('/events/my'),getEventById:id=>api.get(\"/events/\".concat(id)),updateEvent:(id,data)=>api.put(\"/events/\".concat(id),data),deleteEvent:id=>api.delete(\"/events/\".concat(id)),getUpcomingEvents:()=>api.get('/events/upcoming'),joinEvent:eventId=>api.post(\"/events/\".concat(eventId,\"/join\")),leaveEvent:eventId=>api.delete(\"/events/\".concat(eventId,\"/leave\")),getEventByInviteCode:inviteCode=>api.get(\"/invite/\".concat(inviteCode))};// APIs de amizades\nexport const friendshipAPI={sendFriendRequest:userId=>api.post(\"/friendships/request/\".concat(userId)),acceptFriendRequest:friendshipId=>api.put(\"/friendships/\".concat(friendshipId,\"/accept\")),rejectFriendRequest:friendshipId=>api.put(\"/friendships/\".concat(friendshipId,\"/reject\")),removeFriend:friendshipId=>api.delete(\"/friendships/\".concat(friendshipId)),getFriends:()=>api.get('/friendships/friends'),getPendingRequests:()=>api.get('/friendships/pending'),getSentRequests:()=>api.get('/friendships/sent')};// APIs de mensagens\nexport const messageAPI={sendMessage:data=>api.post('/messages',data),getConversation:userId=>api.get(\"/messages/conversation/\".concat(userId)),getConversations:()=>api.get('/messages/conversations'),markAsRead:messageId=>api.put(\"/messages/\".concat(messageId,\"/read\"))};// APIs de itens de evento\nexport const eventItemAPI={getEventItems:eventId=>api.get(\"/events/\".concat(eventId,\"/items\")),createEventItem:(eventId,data)=>api.post(\"/events/\".concat(eventId,\"/items\"),data),assignItem:(eventId,itemId,userId)=>api.put(\"/events/\".concat(eventId,\"/items/\").concat(itemId,\"/assign/\").concat(userId)),completeItem:(eventId,itemId)=>api.put(\"/events/\".concat(eventId,\"/items/\").concat(itemId,\"/complete\"))};export default api;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}