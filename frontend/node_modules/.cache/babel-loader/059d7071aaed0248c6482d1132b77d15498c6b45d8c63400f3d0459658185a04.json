{"ast":null,"code":"import axios from 'axios';\n\n// Configuração base do axios\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5005/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para adicionar token de autenticação\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para tratar respostas\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Tipos para as requisições\n\n// APIs de autenticação\nexport const authAPI = {\n  login: data => api.post('/auth/login', data),\n  register: data => api.post('/auth/register', data)\n};\n\n// APIs de usuários\nexport const userAPI = {\n  getProfile: () => api.get('/users/me'),\n  updateProfile: data => api.put('/users/me', data),\n  searchUsers: searchTerm => api.get(`/users/search?q=${searchTerm}`),\n  getRanking: () => api.get('/users/ranking'),\n  getUserById: id => api.get(`/users/${id}`)\n};\n\n// APIs de eventos\nexport const eventAPI = {\n  createEvent: data => api.post('/events', data),\n  getMyEvents: () => api.get('/events/my'),\n  getEventById: id => api.get(`/events/${id}`),\n  updateEvent: (id, data) => api.put(`/events/${id}`, data),\n  deleteEvent: id => api.delete(`/events/${id}`),\n  getUpcomingEvents: () => api.get('/events/upcoming'),\n  joinEvent: eventId => api.post(`/events/${eventId}/join`),\n  leaveEvent: eventId => api.delete(`/events/${eventId}/leave`),\n  getEventByInviteCode: inviteCode => api.get(`/invite/${inviteCode}`)\n};\n\n// APIs de amizades\nexport const friendshipAPI = {\n  sendFriendRequest: userId => api.post(`/friendships/request/${userId}`),\n  acceptFriendRequest: friendshipId => api.put(`/friendships/${friendshipId}/accept`),\n  rejectFriendRequest: friendshipId => api.put(`/friendships/${friendshipId}/reject`),\n  removeFriend: friendshipId => api.delete(`/friendships/${friendshipId}`),\n  getFriends: () => api.get('/friendships/friends'),\n  getPendingRequests: () => api.get('/friendships/pending'),\n  getSentRequests: () => api.get('/friendships/sent')\n};\n\n// APIs de mensagens\nexport const messageAPI = {\n  sendMessage: data => api.post('/messages', data),\n  getConversation: userId => api.get(`/messages/conversation/${userId}`),\n  getConversations: () => api.get('/messages/conversations'),\n  markAsRead: messageId => api.put(`/messages/${messageId}/read`)\n};\n\n// APIs de itens de evento\nexport const eventItemAPI = {\n  getEventItems: eventId => api.get(`/events/${eventId}/items`),\n  createEventItem: (eventId, data) => api.post(`/events/${eventId}/items`, data),\n  assignItem: (eventId, itemId, userId) => api.put(`/events/${eventId}/items/${itemId}/assign/${userId}`),\n  completeItem: (eventId, itemId) => api.put(`/events/${eventId}/items/${itemId}/complete`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","data","post","register","userAPI","getProfile","get","updateProfile","put","searchUsers","searchTerm","getRanking","getUserById","id","eventAPI","createEvent","getMyEvents","getEventById","updateEvent","deleteEvent","delete","getUpcomingEvents","joinEvent","eventId","leaveEvent","getEventByInviteCode","inviteCode","friendshipAPI","sendFriendRequest","userId","acceptFriendRequest","friendshipId","rejectFriendRequest","removeFriend","getFriends","getPendingRequests","getSentRequests","messageAPI","sendMessage","getConversation","getConversations","markAsRead","messageId","eventItemAPI","getEventItems","createEventItem","assignItem","itemId","completeItem"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Configuração base do axios\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5005/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Interceptor para adicionar token de autenticação\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para tratar respostas\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Tipos para as requisições\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  firstName: string;\n  lastName: string;\n  email: string;\n  username: string;\n  password: string;\n  phoneNumber?: string;\n  bio?: string;\n  birthDate?: string;\n}\n\nexport interface EventRequest {\n  title: string;\n  description?: string;\n  type: string;\n  startDateTime: string;\n  endDateTime?: string;\n  location: string;\n  address?: string;\n  latitude?: number;\n  longitude?: number;\n  maxParticipants?: number;\n  isPrivate: boolean;\n  requiresApproval: boolean;\n  totalCost?: number;\n  hasCostSharing: boolean;\n}\n\n// APIs de autenticação\nexport const authAPI = {\n  login: (data: LoginRequest) => api.post('/auth/login', data),\n  register: (data: RegisterRequest) => api.post('/auth/register', data),\n};\n\n// APIs de usuários\nexport const userAPI = {\n  getProfile: () => api.get('/users/me'),\n  updateProfile: (data: Partial<RegisterRequest>) => api.put('/users/me', data),\n  searchUsers: (searchTerm: string) => api.get(`/users/search?q=${searchTerm}`),\n  getRanking: () => api.get('/users/ranking'),\n  getUserById: (id: number) => api.get(`/users/${id}`),\n};\n\n// APIs de eventos\nexport const eventAPI = {\n  createEvent: (data: EventRequest) => api.post('/events', data),\n  getMyEvents: () => api.get('/events/my'),\n  getEventById: (id: number) => api.get(`/events/${id}`),\n  updateEvent: (id: number, data: Partial<EventRequest>) => api.put(`/events/${id}`, data),\n  deleteEvent: (id: number) => api.delete(`/events/${id}`),\n  getUpcomingEvents: () => api.get('/events/upcoming'),\n  joinEvent: (eventId: number) => api.post(`/events/${eventId}/join`),\n  leaveEvent: (eventId: number) => api.delete(`/events/${eventId}/leave`),\n  getEventByInviteCode: (inviteCode: string) => api.get(`/invite/${inviteCode}`),\n};\n\n// APIs de amizades\nexport const friendshipAPI = {\n  sendFriendRequest: (userId: number) => api.post(`/friendships/request/${userId}`),\n  acceptFriendRequest: (friendshipId: number) => api.put(`/friendships/${friendshipId}/accept`),\n  rejectFriendRequest: (friendshipId: number) => api.put(`/friendships/${friendshipId}/reject`),\n  removeFriend: (friendshipId: number) => api.delete(`/friendships/${friendshipId}`),\n  getFriends: () => api.get('/friendships/friends'),\n  getPendingRequests: () => api.get('/friendships/pending'),\n  getSentRequests: () => api.get('/friendships/sent'),\n};\n\n// APIs de mensagens\nexport const messageAPI = {\n  sendMessage: (data: { receiverId: number; content: string; eventId?: number }) => \n    api.post('/messages', data),\n  getConversation: (userId: number) => api.get(`/messages/conversation/${userId}`),\n  getConversations: () => api.get('/messages/conversations'),\n  markAsRead: (messageId: number) => api.put(`/messages/${messageId}/read`),\n};\n\n// APIs de itens de evento\nexport const eventItemAPI = {\n  getEventItems: (eventId: number) => api.get(`/events/${eventId}/items`),\n  createEventItem: (eventId: number, data: {\n    name: string;\n    description?: string;\n    quantity: number;\n    category?: string;\n    isRequired: boolean;\n    isMonetary: boolean;\n    estimatedCost?: number;\n  }) => api.post(`/events/${eventId}/items`, data),\n  assignItem: (eventId: number, itemId: number, userId: number) => \n    api.put(`/events/${eventId}/items/${itemId}/assign/${userId}`),\n  completeItem: (eventId: number, itemId: number) => \n    api.put(`/events/${eventId}/items/${itemId}/complete`),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}