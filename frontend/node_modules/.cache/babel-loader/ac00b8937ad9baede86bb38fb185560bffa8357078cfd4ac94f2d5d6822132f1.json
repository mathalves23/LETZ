{"ast":null,"code":"import _objectSpread from\"/Users/mdearaujo/Downloads/LETZ/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var _process$env$REACT_AP;import axios from'axios';// Configura√ß√£o base do axios\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5005/api';const DEMO_MODE=process.env.NODE_ENV==='production'&&((_process$env$REACT_AP=process.env.REACT_APP_API_URL)===null||_process$env$REACT_AP===void 0?void 0:_process$env$REACT_AP.includes('netlify'));const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'},timeout:5000// 5 segundos timeout\n});// Mock data para modo demo\nconst mockUsers=[{id:1,firstName:'Jo√£o',lastName:'Silva',email:'joao@exemplo.com',username:'joao123'},{id:2,firstName:'Maria',lastName:'Santos',email:'maria@exemplo.com',username:'maria456'},{id:3,firstName:'Pedro',lastName:'Oliveira',email:'pedro@exemplo.com',username:'pedro789'}];const mockEvents=[{id:1,title:'Churrasco de Final de Ano',description:'Vamos celebrar o ano que passou!',type:'social',startDateTime:'2024-12-31T18:00:00',location:'Casa do Jo√£o',maxParticipants:20,participants:15,isPrivate:false},{id:2,title:'Festa de Anivers√°rio',description:'Anivers√°rio da Maria - 25 anos!',type:'birthday',startDateTime:'2024-07-15T19:00:00',location:'Sal√£o de Festas',maxParticipants:50,participants:32,isPrivate:false}];// Fun√ß√£o para simular delay de rede\nconst delay=ms=>new Promise(resolve=>setTimeout(resolve,ms));// Fun√ß√£o para detectar se estamos em modo demo\nconst isDemoMode=()=>{return DEMO_MODE||localStorage.getItem('demoMode')==='true';};// Interceptor para adicionar token de autentica√ß√£o\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Interceptor para tratar respostas e fallback para modo demo\napi.interceptors.response.use(response=>response,async error=>{var _error$response,_error$response2;// Se √© erro de rede e n√£o estamos em desenvolvimento, ativa modo demo\nif(error.code==='ECONNABORTED'||error.code==='ERR_NETWORK'||((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===503){if(process.env.NODE_ENV==='production'){localStorage.setItem('demoMode','true');console.log('üé≠ Modo demo ativado - Backend n√£o dispon√≠vel');return Promise.reject(new Error('DEMO_MODE_ACTIVATED'));}}if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){localStorage.removeItem('token');if(!isDemoMode()){window.location.href='/login';}}return Promise.reject(error);});// Tipos para as requisi√ß√µes\n// APIs de autentica√ß√£o com fallback para demo\nexport const authAPI={login:async data=>{if(isDemoMode()){await delay(1000);const demoToken='demo-jwt-token-12345';localStorage.setItem('token',demoToken);return{data:{token:demoToken,user:mockUsers[0],message:'Login realizado com sucesso! (Modo Demo)'}};}try{return await api.post('/auth/login',data);}catch(error){if(error.message==='DEMO_MODE_ACTIVATED'){return authAPI.login(data);// Retry in demo mode\n}throw error;}},register:async data=>{if(isDemoMode()){await delay(1000);const newUser=_objectSpread(_objectSpread({},data),{},{id:Date.now()});const demoToken='demo-jwt-token-12345';localStorage.setItem('token',demoToken);return{data:{token:demoToken,user:newUser,message:'Registro realizado com sucesso! (Modo Demo)'}};}try{return await api.post('/auth/register',data);}catch(error){if(error.message==='DEMO_MODE_ACTIVATED'){return authAPI.register(data);}throw error;}}};// APIs de usu√°rios com fallback para demo\nexport const userAPI={getProfile:async()=>{if(isDemoMode()){await delay(500);return{data:mockUsers[0]};}try{return await api.get('/users/me');}catch(error){if(error.message==='DEMO_MODE_ACTIVATED'){return userAPI.getProfile();}throw error;}},updateProfile:async data=>{if(isDemoMode()){await delay(500);return{data:_objectSpread(_objectSpread({},mockUsers[0]),data)};}return api.put('/users/me',data);},searchUsers:async searchTerm=>{if(isDemoMode()){await delay(500);const filtered=mockUsers.filter(user=>user.firstName.toLowerCase().includes(searchTerm.toLowerCase())||user.lastName.toLowerCase().includes(searchTerm.toLowerCase())||user.email.toLowerCase().includes(searchTerm.toLowerCase()));return{data:filtered};}return api.get(\"/users/search?q=\".concat(searchTerm));},getRanking:async()=>{if(isDemoMode()){await delay(500);return{data:mockUsers.map((user,index)=>_objectSpread(_objectSpread({},user),{},{points:1000-index*100}))};}return api.get('/users/ranking');},getUserById:async id=>{if(isDemoMode()){await delay(500);const user=mockUsers.find(u=>u.id===id)||mockUsers[0];return{data:user};}return api.get(\"/users/\".concat(id));}};// APIs de eventos com fallback para demo\nexport const eventAPI={createEvent:async data=>{if(isDemoMode()){await delay(1000);const newEvent=_objectSpread(_objectSpread({},data),{},{id:Date.now(),participants:1,inviteCode:Math.random().toString(36).substring(2,8).toUpperCase()});return{data:newEvent};}return api.post('/events',data);},getMyEvents:async()=>{if(isDemoMode()){await delay(500);return{data:mockEvents};}return api.get('/events/my');},getEventById:async id=>{if(isDemoMode()){await delay(500);const event=mockEvents.find(e=>e.id===id)||mockEvents[0];return{data:event};}return api.get(\"/events/\".concat(id));},updateEvent:async(id,data)=>{if(isDemoMode()){await delay(500);const event=mockEvents.find(e=>e.id===id)||mockEvents[0];return{data:_objectSpread(_objectSpread({},event),data)};}return api.put(\"/events/\".concat(id),data);},deleteEvent:async id=>{if(isDemoMode()){await delay(500);return{data:{message:'Evento exclu√≠do com sucesso!'}};}return api.delete(\"/events/\".concat(id));},getUpcomingEvents:async()=>{if(isDemoMode()){await delay(500);return{data:mockEvents};}return api.get('/events/upcoming');},joinEvent:async eventId=>{if(isDemoMode()){await delay(500);return{data:{message:'Participa√ß√£o confirmada!'}};}return api.post(\"/events/\".concat(eventId,\"/join\"));},leaveEvent:async eventId=>{if(isDemoMode()){await delay(500);return{data:{message:'Participa√ß√£o cancelada!'}};}return api.delete(\"/events/\".concat(eventId,\"/leave\"));},getEventByInviteCode:async inviteCode=>{if(isDemoMode()){await delay(500);return{data:_objectSpread(_objectSpread({},mockEvents[0]),{},{inviteCode})};}return api.get(\"/invite/\".concat(inviteCode));}};// APIs de amizades com fallback para demo\nexport const friendshipAPI={sendFriendRequest:async userId=>{if(isDemoMode()){await delay(500);return{data:{message:'Solicita√ß√£o de amizade enviada!'}};}return api.post(\"/friendships/request/\".concat(userId));},acceptFriendRequest:async friendshipId=>{if(isDemoMode()){await delay(500);return{data:{message:'Solicita√ß√£o aceita!'}};}return api.put(\"/friendships/\".concat(friendshipId,\"/accept\"));},rejectFriendRequest:async friendshipId=>{if(isDemoMode()){await delay(500);return{data:{message:'Solicita√ß√£o rejeitada!'}};}return api.put(\"/friendships/\".concat(friendshipId,\"/reject\"));},removeFriend:async friendshipId=>{if(isDemoMode()){await delay(500);return{data:{message:'Amizade removida!'}};}return api.delete(\"/friendships/\".concat(friendshipId));},getFriends:async()=>{if(isDemoMode()){await delay(500);return{data:mockUsers.slice(1)};}return api.get('/friendships/friends');},getPendingRequests:async()=>{if(isDemoMode()){await delay(500);return{data:[]};}return api.get('/friendships/pending');},getSentRequests:async()=>{if(isDemoMode()){await delay(500);return{data:[]};}return api.get('/friendships/sent');}};// APIs de mensagens com fallback para demo\nexport const messageAPI={sendMessage:async data=>{if(isDemoMode()){await delay(500);return{data:_objectSpread(_objectSpread({id:Date.now()},data),{},{timestamp:new Date().toISOString()})};}return api.post('/messages',data);},getConversation:async userId=>{if(isDemoMode()){await delay(500);return{data:[{id:1,content:'Oi! Como vai?',senderId:userId,receiverId:1,timestamp:new Date().toISOString()},{id:2,content:'Tudo bem! E voc√™?',senderId:1,receiverId:userId,timestamp:new Date().toISOString()}]};}return api.get(\"/messages/conversation/\".concat(userId));},getConversations:async()=>{if(isDemoMode()){await delay(500);return{data:mockUsers.slice(1).map(user=>({user,lastMessage:{content:'Ol√°! Como vai?',timestamp:new Date().toISOString()},unreadCount:Math.floor(Math.random()*3)}))};}return api.get('/messages/conversations');},markAsRead:async messageId=>{if(isDemoMode()){await delay(300);return{data:{message:'Mensagem marcada como lida!'}};}return api.put(\"/messages/\".concat(messageId,\"/read\"));}};// APIs de itens de evento com fallback para demo\nexport const eventItemAPI={getEventItems:async eventId=>{if(isDemoMode()){await delay(500);return{data:[{id:1,name:'Refrigerante',quantity:2,category:'Bebidas',isRequired:true},{id:2,name:'Carne',quantity:5,category:'Comida',isRequired:true},{id:3,name:'Carv√£o',quantity:1,category:'Utens√≠lios',isRequired:false}]};}return api.get(\"/events/\".concat(eventId,\"/items\"));},createEventItem:async(eventId,data)=>{if(isDemoMode()){await delay(500);return{data:_objectSpread({id:Date.now()},data)};}return api.post(\"/events/\".concat(eventId,\"/items\"),data);},assignItem:async(eventId,itemId,userId)=>{if(isDemoMode()){await delay(500);return{data:{message:'Item atribu√≠do com sucesso!'}};}return api.put(\"/events/\".concat(eventId,\"/items/\").concat(itemId,\"/assign/\").concat(userId));},completeItem:async(eventId,itemId)=>{if(isDemoMode()){await delay(500);return{data:{message:'Item marcado como completo!'}};}return api.put(\"/events/\".concat(eventId,\"/items/\").concat(itemId,\"/complete\"));}};// Fun√ß√£o para verificar se est√° em modo demo\nexport const isInDemoMode=isDemoMode;export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","DEMO_MODE","NODE_ENV","_process$env$REACT_AP","includes","api","create","baseURL","headers","timeout","mockUsers","id","firstName","lastName","email","username","mockEvents","title","description","type","startDateTime","location","maxParticipants","participants","isPrivate","delay","ms","Promise","resolve","setTimeout","isDemoMode","localStorage","getItem","interceptors","request","use","config","token","Authorization","concat","error","reject","response","_error$response","_error$response2","code","status","setItem","console","log","Error","removeItem","window","href","authAPI","login","data","demoToken","user","message","post","register","newUser","_objectSpread","Date","now","userAPI","getProfile","get","updateProfile","put","searchUsers","searchTerm","filtered","filter","toLowerCase","getRanking","map","index","points","getUserById","find","u","eventAPI","createEvent","newEvent","inviteCode","Math","random","toString","substring","toUpperCase","getMyEvents","getEventById","event","e","updateEvent","deleteEvent","delete","getUpcomingEvents","joinEvent","eventId","leaveEvent","getEventByInviteCode","friendshipAPI","sendFriendRequest","userId","acceptFriendRequest","friendshipId","rejectFriendRequest","removeFriend","getFriends","slice","getPendingRequests","getSentRequests","messageAPI","sendMessage","timestamp","toISOString","getConversation","content","senderId","receiverId","getConversations","lastMessage","unreadCount","floor","markAsRead","messageId","eventItemAPI","getEventItems","name","quantity","category","isRequired","createEventItem","assignItem","itemId","completeItem","isInDemoMode"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Configura√ß√£o base do axios\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5005/api';\nconst DEMO_MODE = process.env.NODE_ENV === 'production' && process.env.REACT_APP_API_URL?.includes('netlify');\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 5000, // 5 segundos timeout\n});\n\n// Mock data para modo demo\nconst mockUsers = [\n  { id: 1, firstName: 'Jo√£o', lastName: 'Silva', email: 'joao@exemplo.com', username: 'joao123' },\n  { id: 2, firstName: 'Maria', lastName: 'Santos', email: 'maria@exemplo.com', username: 'maria456' },\n  { id: 3, firstName: 'Pedro', lastName: 'Oliveira', email: 'pedro@exemplo.com', username: 'pedro789' },\n];\n\nconst mockEvents = [\n  {\n    id: 1,\n    title: 'Churrasco de Final de Ano',\n    description: 'Vamos celebrar o ano que passou!',\n    type: 'social',\n    startDateTime: '2024-12-31T18:00:00',\n    location: 'Casa do Jo√£o',\n    maxParticipants: 20,\n    participants: 15,\n    isPrivate: false,\n  },\n  {\n    id: 2,\n    title: 'Festa de Anivers√°rio',\n    description: 'Anivers√°rio da Maria - 25 anos!',\n    type: 'birthday',\n    startDateTime: '2024-07-15T19:00:00',\n    location: 'Sal√£o de Festas',\n    maxParticipants: 50,\n    participants: 32,\n    isPrivate: false,\n  },\n];\n\n// Fun√ß√£o para simular delay de rede\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// Fun√ß√£o para detectar se estamos em modo demo\nconst isDemoMode = () => {\n  return DEMO_MODE || localStorage.getItem('demoMode') === 'true';\n};\n\n// Interceptor para adicionar token de autentica√ß√£o\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para tratar respostas e fallback para modo demo\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    // Se √© erro de rede e n√£o estamos em desenvolvimento, ativa modo demo\n    if (error.code === 'ECONNABORTED' || error.code === 'ERR_NETWORK' || error.response?.status === 503) {\n      if (process.env.NODE_ENV === 'production') {\n        localStorage.setItem('demoMode', 'true');\n        console.log('üé≠ Modo demo ativado - Backend n√£o dispon√≠vel');\n        return Promise.reject(new Error('DEMO_MODE_ACTIVATED'));\n      }\n    }\n    \n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      if (!isDemoMode()) {\n        window.location.href = '/login';\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Tipos para as requisi√ß√µes\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  firstName: string;\n  lastName: string;\n  email: string;\n  username: string;\n  password: string;\n  phoneNumber?: string;\n  bio?: string;\n  birthDate?: string;\n}\n\nexport interface EventRequest {\n  title: string;\n  description?: string;\n  type: string;\n  startDateTime: string;\n  endDateTime?: string;\n  location: string;\n  address?: string;\n  latitude?: number;\n  longitude?: number;\n  maxParticipants?: number;\n  isPrivate: boolean;\n  requiresApproval: boolean;\n  totalCost?: number;\n  hasCostSharing: boolean;\n}\n\n// APIs de autentica√ß√£o com fallback para demo\nexport const authAPI = {\n  login: async (data: LoginRequest): Promise<any> => {\n    if (isDemoMode()) {\n      await delay(1000);\n      const demoToken = 'demo-jwt-token-12345';\n      localStorage.setItem('token', demoToken);\n      return {\n        data: {\n          token: demoToken,\n          user: mockUsers[0],\n          message: 'Login realizado com sucesso! (Modo Demo)'\n        }\n      };\n    }\n    \n    try {\n      return await api.post('/auth/login', data);\n    } catch (error: any) {\n      if (error.message === 'DEMO_MODE_ACTIVATED') {\n        return authAPI.login(data); // Retry in demo mode\n      }\n      throw error;\n    }\n  },\n  \n  register: async (data: RegisterRequest): Promise<any> => {\n    if (isDemoMode()) {\n      await delay(1000);\n      const newUser = { ...data, id: Date.now() };\n      const demoToken = 'demo-jwt-token-12345';\n      localStorage.setItem('token', demoToken);\n      return {\n        data: {\n          token: demoToken,\n          user: newUser,\n          message: 'Registro realizado com sucesso! (Modo Demo)'\n        }\n      };\n    }\n    \n    try {\n      return await api.post('/auth/register', data);\n    } catch (error: any) {\n      if (error.message === 'DEMO_MODE_ACTIVATED') {\n        return authAPI.register(data);\n      }\n      throw error;\n    }\n  },\n};\n\n// APIs de usu√°rios com fallback para demo\nexport const userAPI = {\n  getProfile: async (): Promise<any> => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: mockUsers[0] };\n    }\n    \n    try {\n      return await api.get('/users/me');\n    } catch (error: any) {\n      if (error.message === 'DEMO_MODE_ACTIVATED') {\n        return userAPI.getProfile();\n      }\n      throw error;\n    }\n  },\n  \n  updateProfile: async (data: Partial<RegisterRequest>) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { ...mockUsers[0], ...data } };\n    }\n    return api.put('/users/me', data);\n  },\n  \n  searchUsers: async (searchTerm: string) => {\n    if (isDemoMode()) {\n      await delay(500);\n      const filtered = mockUsers.filter(user => \n        user.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        user.lastName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        user.email.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      return { data: filtered };\n    }\n    return api.get(`/users/search?q=${searchTerm}`);\n  },\n  \n  getRanking: async () => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: mockUsers.map((user, index) => ({ ...user, points: 1000 - index * 100 })) };\n    }\n    return api.get('/users/ranking');\n  },\n  \n  getUserById: async (id: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      const user = mockUsers.find(u => u.id === id) || mockUsers[0];\n      return { data: user };\n    }\n    return api.get(`/users/${id}`);\n  },\n};\n\n// APIs de eventos com fallback para demo\nexport const eventAPI = {\n  createEvent: async (data: EventRequest) => {\n    if (isDemoMode()) {\n      await delay(1000);\n      const newEvent = {\n        ...data,\n        id: Date.now(),\n        participants: 1,\n        inviteCode: Math.random().toString(36).substring(2, 8).toUpperCase(),\n      };\n      return { data: newEvent };\n    }\n    return api.post('/events', data);\n  },\n  \n  getMyEvents: async () => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: mockEvents };\n    }\n    return api.get('/events/my');\n  },\n  \n  getEventById: async (id: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      const event = mockEvents.find(e => e.id === id) || mockEvents[0];\n      return { data: event };\n    }\n    return api.get(`/events/${id}`);\n  },\n  \n  updateEvent: async (id: number, data: Partial<EventRequest>) => {\n    if (isDemoMode()) {\n      await delay(500);\n      const event = mockEvents.find(e => e.id === id) || mockEvents[0];\n      return { data: { ...event, ...data } };\n    }\n    return api.put(`/events/${id}`, data);\n  },\n  \n  deleteEvent: async (id: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { message: 'Evento exclu√≠do com sucesso!' } };\n    }\n    return api.delete(`/events/${id}`);\n  },\n  \n  getUpcomingEvents: async () => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: mockEvents };\n    }\n    return api.get('/events/upcoming');\n  },\n  \n  joinEvent: async (eventId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { message: 'Participa√ß√£o confirmada!' } };\n    }\n    return api.post(`/events/${eventId}/join`);\n  },\n  \n  leaveEvent: async (eventId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { message: 'Participa√ß√£o cancelada!' } };\n    }\n    return api.delete(`/events/${eventId}/leave`);\n  },\n  \n  getEventByInviteCode: async (inviteCode: string) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { ...mockEvents[0], inviteCode } };\n    }\n    return api.get(`/invite/${inviteCode}`);\n  },\n};\n\n// APIs de amizades com fallback para demo\nexport const friendshipAPI = {\n  sendFriendRequest: async (userId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { message: 'Solicita√ß√£o de amizade enviada!' } };\n    }\n    return api.post(`/friendships/request/${userId}`);\n  },\n  \n  acceptFriendRequest: async (friendshipId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { message: 'Solicita√ß√£o aceita!' } };\n    }\n    return api.put(`/friendships/${friendshipId}/accept`);\n  },\n  \n  rejectFriendRequest: async (friendshipId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { message: 'Solicita√ß√£o rejeitada!' } };\n    }\n    return api.put(`/friendships/${friendshipId}/reject`);\n  },\n  \n  removeFriend: async (friendshipId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { message: 'Amizade removida!' } };\n    }\n    return api.delete(`/friendships/${friendshipId}`);\n  },\n  \n  getFriends: async () => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: mockUsers.slice(1) };\n    }\n    return api.get('/friendships/friends');\n  },\n  \n  getPendingRequests: async () => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: [] };\n    }\n    return api.get('/friendships/pending');\n  },\n  \n  getSentRequests: async () => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: [] };\n    }\n    return api.get('/friendships/sent');\n  },\n};\n\n// APIs de mensagens com fallback para demo\nexport const messageAPI = {\n  sendMessage: async (data: { receiverId: number; content: string; eventId?: number }) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { id: Date.now(), ...data, timestamp: new Date().toISOString() } };\n    }\n    return api.post('/messages', data);\n  },\n  \n  getConversation: async (userId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: [\n        { id: 1, content: 'Oi! Como vai?', senderId: userId, receiverId: 1, timestamp: new Date().toISOString() },\n        { id: 2, content: 'Tudo bem! E voc√™?', senderId: 1, receiverId: userId, timestamp: new Date().toISOString() },\n      ] };\n    }\n    return api.get(`/messages/conversation/${userId}`);\n  },\n  \n  getConversations: async () => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: mockUsers.slice(1).map(user => ({\n        user,\n        lastMessage: { content: 'Ol√°! Como vai?', timestamp: new Date().toISOString() },\n        unreadCount: Math.floor(Math.random() * 3),\n      })) };\n    }\n    return api.get('/messages/conversations');\n  },\n  \n  markAsRead: async (messageId: number) => {\n    if (isDemoMode()) {\n      await delay(300);\n      return { data: { message: 'Mensagem marcada como lida!' } };\n    }\n    return api.put(`/messages/${messageId}/read`);\n  },\n};\n\n// APIs de itens de evento com fallback para demo\nexport const eventItemAPI = {\n  getEventItems: async (eventId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: [\n        { id: 1, name: 'Refrigerante', quantity: 2, category: 'Bebidas', isRequired: true },\n        { id: 2, name: 'Carne', quantity: 5, category: 'Comida', isRequired: true },\n        { id: 3, name: 'Carv√£o', quantity: 1, category: 'Utens√≠lios', isRequired: false },\n      ] };\n    }\n    return api.get(`/events/${eventId}/items`);\n  },\n  \n  createEventItem: async (eventId: number, data: {\n    name: string;\n    description?: string;\n    quantity: number;\n    category?: string;\n    isRequired: boolean;\n    isMonetary: boolean;\n    estimatedCost?: number;\n  }) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { id: Date.now(), ...data } };\n    }\n    return api.post(`/events/${eventId}/items`, data);\n  },\n  \n  assignItem: async (eventId: number, itemId: number, userId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { message: 'Item atribu√≠do com sucesso!' } };\n    }\n    return api.put(`/events/${eventId}/items/${itemId}/assign/${userId}`);\n  },\n  \n  completeItem: async (eventId: number, itemId: number) => {\n    if (isDemoMode()) {\n      await delay(500);\n      return { data: { message: 'Item marcado como completo!' } };\n    }\n    return api.put(`/events/${eventId}/items/${itemId}/complete`);\n  },\n};\n\n// Fun√ß√£o para verificar se est√° em modo demo\nexport const isInDemoMode = isDemoMode;\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}