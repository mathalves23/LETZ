{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLoading: false,\n  notifications: [],\n  drawerOpen: false,\n  theme: 'light'\n};\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    addNotification: (state, action) => {\n      const notification = {\n        ...action.payload,\n        id: Date.now().toString()\n      };\n      state.notifications.push(notification);\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    clearNotifications: state => {\n      state.notifications = [];\n    },\n    toggleDrawer: state => {\n      state.drawerOpen = !state.drawerOpen;\n    },\n    setDrawerOpen: (state, action) => {\n      state.drawerOpen = action.payload;\n    },\n    toggleTheme: state => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n    },\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    }\n  }\n});\nexport const {\n  setLoading,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  toggleDrawer,\n  setDrawerOpen,\n  toggleTheme,\n  setTheme\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isLoading","notifications","drawerOpen","theme","uiSlice","name","reducers","setLoading","state","action","payload","addNotification","notification","id","Date","now","toString","push","removeNotification","filter","clearNotifications","toggleDrawer","setDrawerOpen","toggleTheme","setTheme","actions","reducer"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/src/store/slices/uiSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface Notification {\n  id: string;\n  message: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  duration?: number;\n}\n\nexport interface UIState {\n  isLoading: boolean;\n  notifications: Notification[];\n  drawerOpen: boolean;\n  theme: 'light' | 'dark';\n}\n\nconst initialState: UIState = {\n  isLoading: false,\n  notifications: [],\n  drawerOpen: false,\n  theme: 'light',\n};\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload;\n    },\n    \n    addNotification: (state, action: PayloadAction<Omit<Notification, 'id'>>) => {\n      const notification: Notification = {\n        ...action.payload,\n        id: Date.now().toString(),\n      };\n      state.notifications.push(notification);\n    },\n    \n    removeNotification: (state, action: PayloadAction<string>) => {\n      state.notifications = state.notifications.filter(\n        (notification) => notification.id !== action.payload\n      );\n    },\n    \n    clearNotifications: (state) => {\n      state.notifications = [];\n    },\n    \n    toggleDrawer: (state) => {\n      state.drawerOpen = !state.drawerOpen;\n    },\n    \n    setDrawerOpen: (state, action: PayloadAction<boolean>) => {\n      state.drawerOpen = action.payload;\n    },\n    \n    toggleTheme: (state) => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n    },\n    \n    setTheme: (state, action: PayloadAction<'light' | 'dark'>) => {\n      state.theme = action.payload;\n    },\n  },\n});\n\nexport const {\n  setLoading,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  toggleDrawer,\n  setDrawerOpen,\n  toggleTheme,\n  setTheme,\n} = uiSlice.actions;\n\nexport default uiSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAgB7D,MAAMC,YAAqB,GAAG;EAC5BC,SAAS,EAAE,KAAK;EAChBC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,OAAO,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,IAAI;EACVN,YAAY;EACZO,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACR,SAAS,GAAGS,MAAM,CAACC,OAAO;IAClC,CAAC;IAEDC,eAAe,EAAEA,CAACH,KAAK,EAAEC,MAA+C,KAAK;MAC3E,MAAMG,YAA0B,GAAG;QACjC,GAAGH,MAAM,CAACC,OAAO;QACjBG,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC;MAC1B,CAAC;MACDR,KAAK,CAACP,aAAa,CAACgB,IAAI,CAACL,YAAY,CAAC;IACxC,CAAC;IAEDM,kBAAkB,EAAEA,CAACV,KAAK,EAAEC,MAA6B,KAAK;MAC5DD,KAAK,CAACP,aAAa,GAAGO,KAAK,CAACP,aAAa,CAACkB,MAAM,CAC7CP,YAAY,IAAKA,YAAY,CAACC,EAAE,KAAKJ,MAAM,CAACC,OAC/C,CAAC;IACH,CAAC;IAEDU,kBAAkB,EAAGZ,KAAK,IAAK;MAC7BA,KAAK,CAACP,aAAa,GAAG,EAAE;IAC1B,CAAC;IAEDoB,YAAY,EAAGb,KAAK,IAAK;MACvBA,KAAK,CAACN,UAAU,GAAG,CAACM,KAAK,CAACN,UAAU;IACtC,CAAC;IAEDoB,aAAa,EAAEA,CAACd,KAAK,EAAEC,MAA8B,KAAK;MACxDD,KAAK,CAACN,UAAU,GAAGO,MAAM,CAACC,OAAO;IACnC,CAAC;IAEDa,WAAW,EAAGf,KAAK,IAAK;MACtBA,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAC1D,CAAC;IAEDqB,QAAQ,EAAEA,CAAChB,KAAK,EAAEC,MAAuC,KAAK;MAC5DD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXH,UAAU;EACVI,eAAe;EACfO,kBAAkB;EAClBE,kBAAkB;EAClBC,YAAY;EACZC,aAAa;EACbC,WAAW;EACXC;AACF,CAAC,GAAGpB,OAAO,CAACqB,OAAO;AAEnB,eAAerB,OAAO,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}