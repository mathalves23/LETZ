{"ast":null,"code":"import _objectSpread from\"/Users/mdearaujo/Downloads/LETZ/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/mdearaujo/Downloads/LETZ/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"children\",\"value\",\"index\"];import React,{useState,useEffect}from'react';import{Box,Container,Typography,Paper,List,ListItem,ListItemText,ListItemAvatar,ListItemSecondaryAction,Avatar,Button,IconButton,Chip,Divider,Alert,CircularProgress,Tabs,Tab,Badge}from'@mui/material';import{Notifications as NotificationsIcon,Event as EventIcon,Person as PersonIcon,Message as MessageIcon,Check as CheckIcon,Close as CloseIcon,Delete as DeleteIcon,MarkEmailRead as MarkReadIcon}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TabPanel(props){const{children,value,index}=props,other=_objectWithoutProperties(props,_excluded);return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({role:\"tabpanel\",hidden:value!==index,id:\"notifications-tabpanel-\".concat(index),\"aria-labelledby\":\"notifications-tab-\".concat(index)},other),{},{children:value===index&&/*#__PURE__*/_jsx(Box,{sx:{py:3},children:children})}));}function NotificationsPage(){const[notifications,setNotifications]=useState([]);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[tabValue,setTabValue]=useState(0);useEffect(()=>{loadNotifications();},[]);const loadNotifications=async()=>{try{setIsLoading(true);// Aqui você faria a chamada para a API de notificações\n// Por enquanto, vamos usar dados mockados\nconst mockNotifications=[{id:1,type:'EVENT_INVITE',title:'Convite para evento',message:'João Silva te convidou para \"Churrasco de Final de Semana\"',isRead:false,createdAt:'2024-01-15T10:30:00Z',data:{eventId:1,userId:2}},{id:2,type:'FRIEND_REQUEST',title:'Solicitação de amizade',message:'Maria Santos enviou uma solicitação de amizade',isRead:false,createdAt:'2024-01-14T15:45:00Z',data:{userId:3,friendshipId:5}},{id:3,type:'EVENT_UPDATE',title:'Evento atualizado',message:'O evento \"Festa de Aniversário\" foi atualizado',isRead:true,createdAt:'2024-01-13T09:15:00Z',data:{eventId:2}},{id:4,type:'MESSAGE',title:'Nova mensagem',message:'Pedro Costa enviou uma mensagem',isRead:false,createdAt:'2024-01-12T18:20:00Z',data:{userId:4,messageId:10}},{id:5,type:'SYSTEM',title:'Nova conquista!',message:'Você ganhou o badge \"Organizador\" por criar seu primeiro evento!',isRead:true,createdAt:'2024-01-11T12:00:00Z'}];setNotifications(mockNotifications);}catch(error){console.error('Erro ao carregar notificações:',error);setError('Erro ao carregar notificações');}finally{setIsLoading(false);}};const handleMarkAsRead=notificationId=>{setNotifications(prev=>prev.map(notification=>notification.id===notificationId?_objectSpread(_objectSpread({},notification),{},{isRead:true}):notification));};const handleMarkAllAsRead=()=>{setNotifications(prev=>prev.map(notification=>_objectSpread(_objectSpread({},notification),{},{isRead:true})));};const handleDeleteNotification=notificationId=>{setNotifications(prev=>prev.filter(notification=>notification.id!==notificationId));};const handleAcceptInvite=(notificationId,eventId)=>{// Aqui você faria a chamada para aceitar o convite\nconsole.log('Aceitar convite para evento:',eventId);handleMarkAsRead(notificationId);};const handleDeclineInvite=(notificationId,eventId)=>{// Aqui você faria a chamada para recusar o convite\nconsole.log('Recusar convite para evento:',eventId);handleDeleteNotification(notificationId);};const handleAcceptFriendRequest=(notificationId,friendshipId)=>{// Aqui você faria a chamada para aceitar a solicitação de amizade\nconsole.log('Aceitar solicitação de amizade:',friendshipId);handleDeleteNotification(notificationId);};const handleDeclineFriendRequest=(notificationId,friendshipId)=>{// Aqui você faria a chamada para recusar a solicitação de amizade\nconsole.log('Recusar solicitação de amizade:',friendshipId);handleDeleteNotification(notificationId);};const getNotificationIcon=type=>{switch(type){case'EVENT_INVITE':case'EVENT_UPDATE':return/*#__PURE__*/_jsx(EventIcon,{});case'FRIEND_REQUEST':return/*#__PURE__*/_jsx(PersonIcon,{});case'MESSAGE':return/*#__PURE__*/_jsx(MessageIcon,{});default:return/*#__PURE__*/_jsx(NotificationsIcon,{});}};const getNotificationColor=type=>{switch(type){case'EVENT_INVITE':return'primary';case'FRIEND_REQUEST':return'success';case'EVENT_UPDATE':return'info';case'MESSAGE':return'warning';case'SYSTEM':return'secondary';default:return'default';}};const renderNotificationActions=notification=>{var _notification$data,_notification$data2;const actions=[];if(notification.type==='EVENT_INVITE'&&(_notification$data=notification.data)!==null&&_notification$data!==void 0&&_notification$data.eventId){actions.push(/*#__PURE__*/_jsx(Button,{size:\"small\",color:\"success\",onClick:()=>handleAcceptInvite(notification.id,notification.data.eventId),children:\"Aceitar\"},\"accept\"),/*#__PURE__*/_jsx(Button,{size:\"small\",color:\"error\",onClick:()=>handleDeclineInvite(notification.id,notification.data.eventId),children:\"Recusar\"},\"decline\"));}if(notification.type==='FRIEND_REQUEST'&&(_notification$data2=notification.data)!==null&&_notification$data2!==void 0&&_notification$data2.friendshipId){actions.push(/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"success\",onClick:()=>handleAcceptFriendRequest(notification.id,notification.data.friendshipId),children:/*#__PURE__*/_jsx(CheckIcon,{})},\"accept-friend\"),/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"error\",onClick:()=>handleDeclineFriendRequest(notification.id,notification.data.friendshipId),children:/*#__PURE__*/_jsx(CloseIcon,{})},\"decline-friend\"));}if(!notification.isRead){actions.push(/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleMarkAsRead(notification.id),children:/*#__PURE__*/_jsx(MarkReadIcon,{})},\"mark-read\"));}actions.push(/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"error\",onClick:()=>handleDeleteNotification(notification.id),children:/*#__PURE__*/_jsx(DeleteIcon,{})},\"delete\"));return actions;};const unreadNotifications=notifications.filter(n=>!n.isRead);const readNotifications=notifications.filter(n=>n.isRead);if(isLoading){return/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",sx:{py:4,display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",sx:{py:4},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",children:\"\\uD83D\\uDD14 Notifica\\xE7\\xF5es\"}),unreadNotifications.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleMarkAllAsRead,children:\"Marcar todas como lidas\"})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},children:error}),/*#__PURE__*/_jsxs(Paper,{elevation:3,children:[/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsxs(Tabs,{value:tabValue,onChange:(e,newValue)=>setTabValue(newValue),children:[/*#__PURE__*/_jsx(Tab,{label:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[\"N\\xE3o lidas\",unreadNotifications.length>0&&/*#__PURE__*/_jsx(Badge,{badgeContent:unreadNotifications.length,color:\"error\"})]})}),/*#__PURE__*/_jsx(Tab,{label:\"Lidas (\".concat(readNotifications.length,\")\")}),/*#__PURE__*/_jsx(Tab,{label:\"Todas (\".concat(notifications.length,\")\")})]})}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:0,children:/*#__PURE__*/_jsxs(List,{children:[unreadNotifications.map((notification,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{sx:{bgcolor:'action.hover',borderLeft:3,borderColor:\"\".concat(getNotificationColor(notification.type),\".main\")},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{color:getNotificationColor(notification.type),children:getNotificationIcon(notification.type)})}),/*#__PURE__*/_jsx(ListItemText,{primary:notification.title,secondary:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:notification.message}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:new Date(notification.createdAt).toLocaleString('pt-BR')})]})}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:1},children:renderNotificationActions(notification)})})]}),index<unreadNotifications.length-1&&/*#__PURE__*/_jsx(Divider,{})]},notification.id)),unreadNotifications.length===0&&/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"Nenhuma notifica\\xE7\\xE3o n\\xE3o lida\",secondary:\"Voc\\xEA est\\xE1 em dia com suas notifica\\xE7\\xF5es!\"})})]})}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:1,children:/*#__PURE__*/_jsxs(List,{children:[readNotifications.map((notification,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{color:getNotificationColor(notification.type),children:getNotificationIcon(notification.type)})}),/*#__PURE__*/_jsx(ListItemText,{primary:notification.title,secondary:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:notification.message}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:new Date(notification.createdAt).toLocaleString('pt-BR')})]})}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"error\",onClick:()=>handleDeleteNotification(notification.id),children:/*#__PURE__*/_jsx(DeleteIcon,{})})})]}),index<readNotifications.length-1&&/*#__PURE__*/_jsx(Divider,{})]},notification.id)),readNotifications.length===0&&/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"Nenhuma notifica\\xE7\\xE3o lida\",secondary:\"As notifica\\xE7\\xF5es lidas aparecer\\xE3o aqui\"})})]})}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:2,children:/*#__PURE__*/_jsx(List,{children:notifications.map((notification,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{sx:{bgcolor:notification.isRead?'transparent':'action.hover',borderLeft:notification.isRead?0:3,borderColor:\"\".concat(getNotificationColor(notification.type),\".main\")},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{color:getNotificationColor(notification.type),children:getNotificationIcon(notification.type)})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:notification.title}),!notification.isRead&&/*#__PURE__*/_jsx(Chip,{label:\"Nova\",size:\"small\",color:\"error\"})]}),secondary:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:notification.message}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:new Date(notification.createdAt).toLocaleString('pt-BR')})]})}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:1},children:renderNotificationActions(notification)})})]}),index<notifications.length-1&&/*#__PURE__*/_jsx(Divider,{})]},notification.id))})})]})]});}export default NotificationsPage;","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","Paper","List","ListItem","ListItemText","ListItemAvatar","ListItemSecondaryAction","Avatar","Button","IconButton","Chip","Divider","Alert","CircularProgress","Tabs","Tab","Badge","Notifications","NotificationsIcon","Event","EventIcon","Person","PersonIcon","Message","MessageIcon","Check","CheckIcon","Close","CloseIcon","Delete","DeleteIcon","MarkEmailRead","MarkReadIcon","jsx","_jsx","jsxs","_jsxs","TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_objectSpread","role","hidden","id","concat","sx","py","NotificationsPage","notifications","setNotifications","isLoading","setIsLoading","error","setError","tabValue","setTabValue","loadNotifications","mockNotifications","type","title","message","isRead","createdAt","data","eventId","userId","friendshipId","messageId","console","handleMarkAsRead","notificationId","prev","map","notification","handleMarkAllAsRead","handleDeleteNotification","filter","handleAcceptInvite","log","handleDeclineInvite","handleAcceptFriendRequest","handleDeclineFriendRequest","getNotificationIcon","getNotificationColor","renderNotificationActions","_notification$data","_notification$data2","actions","push","size","color","onClick","unreadNotifications","n","readNotifications","maxWidth","display","justifyContent","alignItems","mb","variant","component","length","severity","elevation","borderBottom","borderColor","onChange","e","newValue","label","gap","badgeContent","Fragment","bgcolor","borderLeft","primary","secondary","Date","toLocaleString"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/src/pages/NotificationsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  Avatar,\n  Button,\n  IconButton,\n  Chip,\n  Divider,\n  Alert,\n  CircularProgress,\n  Tabs,\n  Tab,\n  Badge,\n} from '@mui/material';\nimport {\n  Notifications as NotificationsIcon,\n  Event as EventIcon,\n  Person as PersonIcon,\n  Message as MessageIcon,\n  Check as CheckIcon,\n  Close as CloseIcon,\n  Delete as DeleteIcon,\n  MarkEmailRead as MarkReadIcon,\n} from '@mui/icons-material';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\n\ninterface Notification {\n  id: number;\n  type: 'EVENT_INVITE' | 'FRIEND_REQUEST' | 'EVENT_UPDATE' | 'MESSAGE' | 'SYSTEM';\n  title: string;\n  message: string;\n  isRead: boolean;\n  createdAt: string;\n  data?: {\n    eventId?: number;\n    userId?: number;\n    friendshipId?: number;\n    messageId?: number;\n  };\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`notifications-tabpanel-${index}`}\n      aria-labelledby={`notifications-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction NotificationsPage() {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [tabValue, setTabValue] = useState(0);\n\n  useEffect(() => {\n    loadNotifications();\n  }, []);\n\n  const loadNotifications = async () => {\n    try {\n      setIsLoading(true);\n      // Aqui você faria a chamada para a API de notificações\n      // Por enquanto, vamos usar dados mockados\n      const mockNotifications: Notification[] = [\n        {\n          id: 1,\n          type: 'EVENT_INVITE',\n          title: 'Convite para evento',\n          message: 'João Silva te convidou para \"Churrasco de Final de Semana\"',\n          isRead: false,\n          createdAt: '2024-01-15T10:30:00Z',\n          data: { eventId: 1, userId: 2 },\n        },\n        {\n          id: 2,\n          type: 'FRIEND_REQUEST',\n          title: 'Solicitação de amizade',\n          message: 'Maria Santos enviou uma solicitação de amizade',\n          isRead: false,\n          createdAt: '2024-01-14T15:45:00Z',\n          data: { userId: 3, friendshipId: 5 },\n        },\n        {\n          id: 3,\n          type: 'EVENT_UPDATE',\n          title: 'Evento atualizado',\n          message: 'O evento \"Festa de Aniversário\" foi atualizado',\n          isRead: true,\n          createdAt: '2024-01-13T09:15:00Z',\n          data: { eventId: 2 },\n        },\n        {\n          id: 4,\n          type: 'MESSAGE',\n          title: 'Nova mensagem',\n          message: 'Pedro Costa enviou uma mensagem',\n          isRead: false,\n          createdAt: '2024-01-12T18:20:00Z',\n          data: { userId: 4, messageId: 10 },\n        },\n        {\n          id: 5,\n          type: 'SYSTEM',\n          title: 'Nova conquista!',\n          message: 'Você ganhou o badge \"Organizador\" por criar seu primeiro evento!',\n          isRead: true,\n          createdAt: '2024-01-11T12:00:00Z',\n        },\n      ];\n      \n      setNotifications(mockNotifications);\n    } catch (error) {\n      console.error('Erro ao carregar notificações:', error);\n      setError('Erro ao carregar notificações');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleMarkAsRead = (notificationId: number) => {\n    setNotifications(prev =>\n      prev.map(notification =>\n        notification.id === notificationId\n          ? { ...notification, isRead: true }\n          : notification\n      )\n    );\n  };\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(prev =>\n      prev.map(notification => ({ ...notification, isRead: true }))\n    );\n  };\n\n  const handleDeleteNotification = (notificationId: number) => {\n    setNotifications(prev =>\n      prev.filter(notification => notification.id !== notificationId)\n    );\n  };\n\n  const handleAcceptInvite = (notificationId: number, eventId: number) => {\n    // Aqui você faria a chamada para aceitar o convite\n    console.log('Aceitar convite para evento:', eventId);\n    handleMarkAsRead(notificationId);\n  };\n\n  const handleDeclineInvite = (notificationId: number, eventId: number) => {\n    // Aqui você faria a chamada para recusar o convite\n    console.log('Recusar convite para evento:', eventId);\n    handleDeleteNotification(notificationId);\n  };\n\n  const handleAcceptFriendRequest = (notificationId: number, friendshipId: number) => {\n    // Aqui você faria a chamada para aceitar a solicitação de amizade\n    console.log('Aceitar solicitação de amizade:', friendshipId);\n    handleDeleteNotification(notificationId);\n  };\n\n  const handleDeclineFriendRequest = (notificationId: number, friendshipId: number) => {\n    // Aqui você faria a chamada para recusar a solicitação de amizade\n    console.log('Recusar solicitação de amizade:', friendshipId);\n    handleDeleteNotification(notificationId);\n  };\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'EVENT_INVITE':\n      case 'EVENT_UPDATE':\n        return <EventIcon />;\n      case 'FRIEND_REQUEST':\n        return <PersonIcon />;\n      case 'MESSAGE':\n        return <MessageIcon />;\n      default:\n        return <NotificationsIcon />;\n    }\n  };\n\n  const getNotificationColor = (type: string) => {\n    switch (type) {\n      case 'EVENT_INVITE':\n        return 'primary';\n      case 'FRIEND_REQUEST':\n        return 'success';\n      case 'EVENT_UPDATE':\n        return 'info';\n      case 'MESSAGE':\n        return 'warning';\n      case 'SYSTEM':\n        return 'secondary';\n      default:\n        return 'default';\n    }\n  };\n\n  const renderNotificationActions = (notification: Notification) => {\n    const actions = [];\n\n    if (notification.type === 'EVENT_INVITE' && notification.data?.eventId) {\n      actions.push(\n        <Button\n          key=\"accept\"\n          size=\"small\"\n          color=\"success\"\n          onClick={() => handleAcceptInvite(notification.id, notification.data!.eventId!)}\n        >\n          Aceitar\n        </Button>,\n        <Button\n          key=\"decline\"\n          size=\"small\"\n          color=\"error\"\n          onClick={() => handleDeclineInvite(notification.id, notification.data!.eventId!)}\n        >\n          Recusar\n        </Button>\n      );\n    }\n\n    if (notification.type === 'FRIEND_REQUEST' && notification.data?.friendshipId) {\n      actions.push(\n        <IconButton\n          key=\"accept-friend\"\n          size=\"small\"\n          color=\"success\"\n          onClick={() => handleAcceptFriendRequest(notification.id, notification.data!.friendshipId!)}\n        >\n          <CheckIcon />\n        </IconButton>,\n        <IconButton\n          key=\"decline-friend\"\n          size=\"small\"\n          color=\"error\"\n          onClick={() => handleDeclineFriendRequest(notification.id, notification.data!.friendshipId!)}\n        >\n          <CloseIcon />\n        </IconButton>\n      );\n    }\n\n    if (!notification.isRead) {\n      actions.push(\n        <IconButton\n          key=\"mark-read\"\n          size=\"small\"\n          onClick={() => handleMarkAsRead(notification.id)}\n        >\n          <MarkReadIcon />\n        </IconButton>\n      );\n    }\n\n    actions.push(\n      <IconButton\n        key=\"delete\"\n        size=\"small\"\n        color=\"error\"\n        onClick={() => handleDeleteNotification(notification.id)}\n      >\n        <DeleteIcon />\n      </IconButton>\n    );\n\n    return actions;\n  };\n\n  const unreadNotifications = notifications.filter(n => !n.isRead);\n  const readNotifications = notifications.filter(n => n.isRead);\n\n  if (isLoading) {\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 4, display: 'flex', justifyContent: 'center' }}>\n        <CircularProgress />\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          🔔 Notificações\n        </Typography>\n        \n        {unreadNotifications.length > 0 && (\n          <Button\n            variant=\"outlined\"\n            onClick={handleMarkAllAsRead}\n          >\n            Marcar todas como lidas\n          </Button>\n        )}\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      <Paper elevation={3}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tabValue} onChange={(e, newValue) => setTabValue(newValue)}>\n            <Tab\n              label={\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                  Não lidas\n                  {unreadNotifications.length > 0 && (\n                    <Badge badgeContent={unreadNotifications.length} color=\"error\" />\n                  )}\n                </Box>\n              }\n            />\n            <Tab label={`Lidas (${readNotifications.length})`} />\n            <Tab label={`Todas (${notifications.length})`} />\n          </Tabs>\n        </Box>\n\n        <TabPanel value={tabValue} index={0}>\n          <List>\n            {unreadNotifications.map((notification, index) => (\n              <React.Fragment key={notification.id}>\n                <ListItem\n                  sx={{\n                    bgcolor: 'action.hover',\n                    borderLeft: 3,\n                    borderColor: `${getNotificationColor(notification.type)}.main`,\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Avatar color={getNotificationColor(notification.type) as any}>\n                      {getNotificationIcon(notification.type)}\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={notification.title}\n                    secondary={\n                      <Box>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {notification.message}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {new Date(notification.createdAt).toLocaleString('pt-BR')}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    <Box sx={{ display: 'flex', gap: 1 }}>\n                      {renderNotificationActions(notification)}\n                    </Box>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                {index < unreadNotifications.length - 1 && <Divider />}\n              </React.Fragment>\n            ))}\n            {unreadNotifications.length === 0 && (\n              <ListItem>\n                <ListItemText\n                  primary=\"Nenhuma notificação não lida\"\n                  secondary=\"Você está em dia com suas notificações!\"\n                />\n              </ListItem>\n            )}\n          </List>\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          <List>\n            {readNotifications.map((notification, index) => (\n              <React.Fragment key={notification.id}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar color={getNotificationColor(notification.type) as any}>\n                      {getNotificationIcon(notification.type)}\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={notification.title}\n                    secondary={\n                      <Box>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {notification.message}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {new Date(notification.createdAt).toLocaleString('pt-BR')}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      size=\"small\"\n                      color=\"error\"\n                      onClick={() => handleDeleteNotification(notification.id)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                {index < readNotifications.length - 1 && <Divider />}\n              </React.Fragment>\n            ))}\n            {readNotifications.length === 0 && (\n              <ListItem>\n                <ListItemText\n                  primary=\"Nenhuma notificação lida\"\n                  secondary=\"As notificações lidas aparecerão aqui\"\n                />\n              </ListItem>\n            )}\n          </List>\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={2}>\n          <List>\n            {notifications.map((notification, index) => (\n              <React.Fragment key={notification.id}>\n                <ListItem\n                  sx={{\n                    bgcolor: notification.isRead ? 'transparent' : 'action.hover',\n                    borderLeft: notification.isRead ? 0 : 3,\n                    borderColor: `${getNotificationColor(notification.type)}.main`,\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Avatar color={getNotificationColor(notification.type) as any}>\n                      {getNotificationIcon(notification.type)}\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Typography variant=\"subtitle1\">\n                          {notification.title}\n                        </Typography>\n                        {!notification.isRead && (\n                          <Chip label=\"Nova\" size=\"small\" color=\"error\" />\n                        )}\n                      </Box>\n                    }\n                    secondary={\n                      <Box>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {notification.message}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {new Date(notification.createdAt).toLocaleString('pt-BR')}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    <Box sx={{ display: 'flex', gap: 1 }}>\n                      {renderNotificationActions(notification)}\n                    </Box>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                {index < notifications.length - 1 && <Divider />}\n              </React.Fragment>\n            ))}\n          </List>\n        </TabPanel>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default NotificationsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}