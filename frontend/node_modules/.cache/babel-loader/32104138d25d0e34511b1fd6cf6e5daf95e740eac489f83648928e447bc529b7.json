{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/mdearaujo/Downloads/LETZ/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/mdearaujo/Downloads/LETZ/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"elementType\", \"externalSlotProps\", \"ownerState\", \"skipResolvingSlotProps\"];\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { appendOwnerState } from './appendOwnerState';\nimport { mergeSlotProps } from './mergeSlotProps';\nimport { resolveComponentProps } from './resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nexport function useSlotProps(parameters) {\n  var _parameters$additiona;\n  const {\n      elementType,\n      externalSlotProps,\n      ownerState,\n      skipResolvingSlotProps = false\n    } = parameters,\n    rest = _objectWithoutProperties(parameters, _excluded);\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps(_objectSpread(_objectSpread({}, rest), {}, {\n    externalSlotProps: resolvedComponentsProps\n  }));\n  const ref = useForkRef(internalRef, resolvedComponentsProps === null || resolvedComponentsProps === void 0 ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) === null || _parameters$additiona === void 0 ? void 0 : _parameters$additiona.ref);\n  const props = appendOwnerState(elementType, _objectSpread(_objectSpread({}, mergedProps), {}, {\n    ref\n  }), ownerState);\n  return props;\n}","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","unstable_useForkRef","useForkRef","appendOwnerState","mergeSlotProps","resolveComponentProps","useSlotProps","parameters","_parameters$additiona","elementType","externalSlotProps","ownerState","skipResolvingSlotProps","rest","resolvedComponentsProps","props","mergedProps","internalRef","ref","additionalProps"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/node_modules/@mui/base/utils/useSlotProps.js"],"sourcesContent":["'use client';\n\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { appendOwnerState } from './appendOwnerState';\nimport { mergeSlotProps } from './mergeSlotProps';\nimport { resolveComponentProps } from './resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nexport function useSlotProps(parameters) {\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    skipResolvingSlotProps = false,\n    ...rest\n  } = parameters;\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...rest,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AAAA,OAAAC,wBAAA;AAAA,MAAAC,SAAA;AAEb,SAASC,mBAAmB,IAAIC,UAAU,QAAQ,YAAY;AAC9D,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,UAAU,EAAE;EAAA,IAAAC,qBAAA;EACvC,MAAM;MACJC,WAAW;MACXC,iBAAiB;MACjBC,UAAU;MACVC,sBAAsB,GAAG;IAE3B,CAAC,GAAGL,UAAU;IADTM,IAAI,GAAAd,wBAAA,CACLQ,UAAU,EAAAP,SAAA;EACd,MAAMc,uBAAuB,GAAGF,sBAAsB,GAAG,CAAC,CAAC,GAAGP,qBAAqB,CAACK,iBAAiB,EAAEC,UAAU,CAAC;EAClH,MAAM;IACJI,KAAK,EAAEC,WAAW;IAClBC;EACF,CAAC,GAAGb,cAAc,CAAAN,aAAA,CAAAA,aAAA,KACbe,IAAI;IACPH,iBAAiB,EAAEI;EAAuB,EAC3C,CAAC;EACF,MAAMI,GAAG,GAAGhB,UAAU,CAACe,WAAW,EAAEH,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEI,GAAG,GAAAV,qBAAA,GAAED,UAAU,CAACY,eAAe,cAAAX,qBAAA,uBAA1BA,qBAAA,CAA4BU,GAAG,CAAC;EAClG,MAAMH,KAAK,GAAGZ,gBAAgB,CAACM,WAAW,EAAAX,aAAA,CAAAA,aAAA,KACrCkB,WAAW;IACdE;EAAG,IACFP,UAAU,CAAC;EACd,OAAOI,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}