{"ast":null,"code":"import axios from'axios';// Configuração base do axios\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5005/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Interceptor para adicionar token de autenticação\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Interceptor para tratar respostas\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});// Tipos para as requisições\n// APIs de autenticação\nexport const authAPI={login:data=>api.post('/auth/login',data),register:data=>api.post('/auth/register',data)};// APIs de usuários\nexport const userAPI={getProfile:()=>api.get('/users/me'),updateProfile:data=>api.put('/users/me',data),searchUsers:searchTerm=>api.get(\"/users/search?q=\".concat(searchTerm)),getRanking:()=>api.get('/users/ranking'),getUserById:id=>api.get(\"/users/\".concat(id))};// APIs de eventos\nexport const eventAPI={createEvent:data=>api.post('/events',data),getMyEvents:()=>api.get('/events/my'),getEventById:id=>api.get(\"/events/\".concat(id)),updateEvent:(id,data)=>api.put(\"/events/\".concat(id),data),deleteEvent:id=>api.delete(\"/events/\".concat(id)),getUpcomingEvents:()=>api.get('/events/upcoming'),joinEvent:eventId=>api.post(\"/events/\".concat(eventId,\"/join\")),leaveEvent:eventId=>api.delete(\"/events/\".concat(eventId,\"/leave\")),getEventByInviteCode:inviteCode=>api.get(\"/invite/\".concat(inviteCode))};// APIs de amizades\nexport const friendshipAPI={sendFriendRequest:userId=>api.post(\"/friendships/request/\".concat(userId)),acceptFriendRequest:friendshipId=>api.put(\"/friendships/\".concat(friendshipId,\"/accept\")),rejectFriendRequest:friendshipId=>api.put(\"/friendships/\".concat(friendshipId,\"/reject\")),removeFriend:friendshipId=>api.delete(\"/friendships/\".concat(friendshipId)),getFriends:()=>api.get('/friendships/friends'),getPendingRequests:()=>api.get('/friendships/pending'),getSentRequests:()=>api.get('/friendships/sent')};// APIs de mensagens\nexport const messageAPI={sendMessage:data=>api.post('/messages',data),getConversation:userId=>api.get(\"/messages/conversation/\".concat(userId)),getConversations:()=>api.get('/messages/conversations'),markAsRead:messageId=>api.put(\"/messages/\".concat(messageId,\"/read\"))};// APIs de itens de evento\nexport const eventItemAPI={getEventItems:eventId=>api.get(\"/events/\".concat(eventId,\"/items\")),createEventItem:(eventId,data)=>api.post(\"/events/\".concat(eventId,\"/items\"),data),assignItem:(eventId,itemId,userId)=>api.put(\"/events/\".concat(eventId,\"/items/\").concat(itemId,\"/assign/\").concat(userId)),completeItem:(eventId,itemId)=>api.put(\"/events/\".concat(eventId,\"/items/\").concat(itemId,\"/complete\"))};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","data","post","register","userAPI","getProfile","get","updateProfile","put","searchUsers","searchTerm","getRanking","getUserById","id","eventAPI","createEvent","getMyEvents","getEventById","updateEvent","deleteEvent","delete","getUpcomingEvents","joinEvent","eventId","leaveEvent","getEventByInviteCode","inviteCode","friendshipAPI","sendFriendRequest","userId","acceptFriendRequest","friendshipId","rejectFriendRequest","removeFriend","getFriends","getPendingRequests","getSentRequests","messageAPI","sendMessage","getConversation","getConversations","markAsRead","messageId","eventItemAPI","getEventItems","createEventItem","assignItem","itemId","completeItem"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Configuração base do axios\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5005/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Interceptor para adicionar token de autenticação\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para tratar respostas\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Tipos para as requisições\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterRequest {\n  firstName: string;\n  lastName: string;\n  email: string;\n  username: string;\n  password: string;\n  phoneNumber?: string;\n  bio?: string;\n  birthDate?: string;\n}\n\nexport interface EventRequest {\n  title: string;\n  description?: string;\n  type: string;\n  startDateTime: string;\n  endDateTime?: string;\n  location: string;\n  address?: string;\n  latitude?: number;\n  longitude?: number;\n  maxParticipants?: number;\n  isPrivate: boolean;\n  requiresApproval: boolean;\n  totalCost?: number;\n  hasCostSharing: boolean;\n}\n\n// APIs de autenticação\nexport const authAPI = {\n  login: (data: LoginRequest) => api.post('/auth/login', data),\n  register: (data: RegisterRequest) => api.post('/auth/register', data),\n};\n\n// APIs de usuários\nexport const userAPI = {\n  getProfile: () => api.get('/users/me'),\n  updateProfile: (data: Partial<RegisterRequest>) => api.put('/users/me', data),\n  searchUsers: (searchTerm: string) => api.get(`/users/search?q=${searchTerm}`),\n  getRanking: () => api.get('/users/ranking'),\n  getUserById: (id: number) => api.get(`/users/${id}`),\n};\n\n// APIs de eventos\nexport const eventAPI = {\n  createEvent: (data: EventRequest) => api.post('/events', data),\n  getMyEvents: () => api.get('/events/my'),\n  getEventById: (id: number) => api.get(`/events/${id}`),\n  updateEvent: (id: number, data: Partial<EventRequest>) => api.put(`/events/${id}`, data),\n  deleteEvent: (id: number) => api.delete(`/events/${id}`),\n  getUpcomingEvents: () => api.get('/events/upcoming'),\n  joinEvent: (eventId: number) => api.post(`/events/${eventId}/join`),\n  leaveEvent: (eventId: number) => api.delete(`/events/${eventId}/leave`),\n  getEventByInviteCode: (inviteCode: string) => api.get(`/invite/${inviteCode}`),\n};\n\n// APIs de amizades\nexport const friendshipAPI = {\n  sendFriendRequest: (userId: number) => api.post(`/friendships/request/${userId}`),\n  acceptFriendRequest: (friendshipId: number) => api.put(`/friendships/${friendshipId}/accept`),\n  rejectFriendRequest: (friendshipId: number) => api.put(`/friendships/${friendshipId}/reject`),\n  removeFriend: (friendshipId: number) => api.delete(`/friendships/${friendshipId}`),\n  getFriends: () => api.get('/friendships/friends'),\n  getPendingRequests: () => api.get('/friendships/pending'),\n  getSentRequests: () => api.get('/friendships/sent'),\n};\n\n// APIs de mensagens\nexport const messageAPI = {\n  sendMessage: (data: { receiverId: number; content: string; eventId?: number }) => \n    api.post('/messages', data),\n  getConversation: (userId: number) => api.get(`/messages/conversation/${userId}`),\n  getConversations: () => api.get('/messages/conversations'),\n  markAsRead: (messageId: number) => api.put(`/messages/${messageId}/read`),\n};\n\n// APIs de itens de evento\nexport const eventItemAPI = {\n  getEventItems: (eventId: number) => api.get(`/events/${eventId}/items`),\n  createEventItem: (eventId: number, data: {\n    name: string;\n    description?: string;\n    quantity: number;\n    category?: string;\n    isRequired: boolean;\n    isMonetary: boolean;\n    estimatedCost?: number;\n  }) => api.post(`/events/${eventId}/items`, data),\n  assignItem: (eventId: number, itemId: number, userId: number) => \n    api.put(`/events/${eventId}/items/${itemId}/assign/${userId}`),\n  completeItem: (eventId: number, itemId: number) => \n    api.put(`/events/${eventId}/items/${itemId}/complete`),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}