{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Box,Container,Paper,List,ListItem,ListItemAvatar,ListItemText,Avatar,Typography,TextField,IconButton,Badge,Grid,Chip,InputAdornment,CircularProgress}from'@mui/material';import{Send as SendIcon,Search as SearchIcon,VideoCall as VideoCallIcon,Phone as PhoneIcon,MoreVert as MoreVertIcon}from'@mui/icons-material';import{useSelector}from'react-redux';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MessagesPage=()=>{const{user}=useSelector(state=>state.auth);const[selectedChat,setSelectedChat]=useState(null);const[message,setMessage]=useState('');const[messages,setMessages]=useState([]);const[chats,setChats]=useState([]);const[searchQuery,setSearchQuery]=useState('');const[loading,setLoading]=useState(false);const[typing,setTyping]=useState(false);const messagesEndRef=useRef(null);const wsRef=useRef(null);// Chats mockados para demonstração\nconst mockChats=[{id:1,participantId:2,participantName:'João Silva',participantAvatar:'/avatars/joao.jpg',lastMessage:'Vamos confirmar o churrasco para sábado?',lastMessageTime:new Date(Date.now()-5*60*1000),unreadCount:2,isOnline:true,eventId:1,eventName:'Churrasco de Fim de Semana'},{id:2,participantId:3,participantName:'Maria Santos',participantAvatar:'/avatars/maria.jpg',lastMessage:'Preciso confirmar quantas pessoas vão...',lastMessageTime:new Date(Date.now()-20*60*1000),unreadCount:0,isOnline:true},{id:3,participantId:4,participantName:'Pedro Costa',participantAvatar:'/avatars/pedro.jpg',lastMessage:'A festa foi incrível! Obrigado pela organização 🎉',lastMessageTime:new Date(Date.now()-2*60*60*1000),unreadCount:0,isOnline:false}];const mockMessages=[{id:1,senderId:2,senderName:'João Silva',content:'Oi! Como está o planejamento do churrasco?',timestamp:new Date(Date.now()-60*60*1000),isRead:true},{id:2,senderId:(user===null||user===void 0?void 0:user.id)||1,senderName:(user===null||user===void 0?void 0:user.firstName)||'Você',content:'Oi João! Está indo bem. Já confirmaram 15 pessoas.',timestamp:new Date(Date.now()-50*60*1000),isRead:true},{id:3,senderId:2,senderName:'João Silva',content:'Perfeito! Vou levar a churrasqueira portátil e o carvão.',timestamp:new Date(Date.now()-30*60*1000),isRead:true},{id:4,senderId:2,senderName:'João Silva',content:'Vamos confirmar o churrasco para sábado?',timestamp:new Date(Date.now()-5*60*1000),isRead:false}];useEffect(()=>{setChats(mockChats);if(mockChats.length>0){setSelectedChat(mockChats[0]);setMessages(mockMessages);}},[]);useEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};const formatTime=date=>{const now=new Date();const diff=now.getTime()-date.getTime();const minutes=Math.floor(diff/(1000*60));const hours=Math.floor(diff/(1000*60*60));const days=Math.floor(diff/(1000*60*60*24));if(minutes<60){return\"\".concat(minutes,\"min\");}else if(hours<24){return\"\".concat(hours,\"h\");}else{return\"\".concat(days,\"d\");}};const handleSendMessage=async()=>{if(!message.trim()||!selectedChat)return;const newMessage={id:messages.length+1,senderId:(user===null||user===void 0?void 0:user.id)||1,senderName:(user===null||user===void 0?void 0:user.firstName)||'Você',content:message,timestamp:new Date(),isRead:false};setMessages(prev=>[...prev,newMessage]);setMessage('');// Simular resposta automática para demonstração\nsetTimeout(()=>{const responseMessage={id:messages.length+2,senderId:selectedChat.participantId,senderName:selectedChat.participantName,content:'Mensagem recebida! 👍',timestamp:new Date(),isRead:false};setMessages(prev=>[...prev,responseMessage]);},2000);};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};const filteredChats=chats.filter(chat=>{var _chat$eventName;return chat.participantName.toLowerCase().includes(searchQuery.toLowerCase())||((_chat$eventName=chat.eventName)===null||_chat$eventName===void 0?void 0:_chat$eventName.toLowerCase().includes(searchQuery.toLowerCase()));});return/*#__PURE__*/_jsxs(Container,{maxWidth:\"xl\",sx:{py:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,sx:{mb:3,fontWeight:600},children:\"\\uD83D\\uDCAC Mensagens\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{height:'calc(100vh - 200px)'},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Paper,{sx:{height:'100%',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(Box,{sx:{p:2,borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",placeholder:\"Buscar conversas...\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value),InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(SearchIcon,{})})}})}),/*#__PURE__*/_jsx(List,{sx:{flex:1,overflow:'auto',p:0},children:filteredChats.map(chat=>/*#__PURE__*/_jsxs(ListItem,{button:true,selected:(selectedChat===null||selectedChat===void 0?void 0:selectedChat.id)===chat.id,onClick:()=>{setSelectedChat(chat);setMessages(mockMessages);},sx:{borderBottom:1,borderColor:'divider','&.Mui-selected':{backgroundColor:'primary.light','&:hover':{backgroundColor:'primary.light'}}},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Badge,{color:\"success\",variant:\"dot\",invisible:!chat.isOnline,anchorOrigin:{vertical:'bottom',horizontal:'right'},children:/*#__PURE__*/_jsx(Avatar,{src:chat.participantAvatar,children:chat.participantName.charAt(0)})})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",noWrap:true,children:chat.participantName}),chat.lastMessageTime&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:formatTime(chat.lastMessageTime)})]}),secondary:/*#__PURE__*/_jsxs(Box,{children:[chat.eventName&&/*#__PURE__*/_jsx(Chip,{size:\"small\",label:chat.eventName,color:\"primary\",variant:\"outlined\",sx:{mb:0.5,maxWidth:'100%'}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",noWrap:true,children:chat.lastMessage})]})}),chat.unreadCount>0&&/*#__PURE__*/_jsx(Badge,{badgeContent:chat.unreadCount,color:\"error\"})]},chat.id))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:selectedChat?/*#__PURE__*/_jsxs(Paper,{sx:{height:'100%',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(Box,{sx:{p:2,borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(Badge,{color:\"success\",variant:\"dot\",invisible:!selectedChat.isOnline,children:/*#__PURE__*/_jsx(Avatar,{src:selectedChat.participantAvatar,children:selectedChat.participantName.charAt(0)})}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:selectedChat.participantName}),selectedChat.eventName&&/*#__PURE__*/_jsx(Chip,{size:\"small\",label:selectedChat.eventName,color:\"primary\",variant:\"outlined\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:selectedChat.isOnline?'Online':'Offline'})]})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(PhoneIcon,{})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(VideoCallIcon,{})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(MoreVertIcon,{})})]})]})}),/*#__PURE__*/_jsxs(Box,{sx:{flex:1,overflow:'auto',p:2},children:[messages.map(msg=>/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:msg.senderId===(user===null||user===void 0?void 0:user.id)?'flex-end':'flex-start',mb:1},children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2,maxWidth:'70%',backgroundColor:msg.senderId===(user===null||user===void 0?void 0:user.id)?'primary.main':'grey.100',color:msg.senderId===(user===null||user===void 0?void 0:user.id)?'white':'text.primary'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:msg.content}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{display:'block',mt:0.5,opacity:0.7},children:msg.timestamp.toLocaleTimeString()})]})},msg.id)),typing&&/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1,mt:1},children:[/*#__PURE__*/_jsx(Avatar,{src:selectedChat.participantAvatar,sx:{width:24,height:24},children:selectedChat.participantName.charAt(0)}),/*#__PURE__*/_jsxs(Paper,{sx:{p:1,backgroundColor:'grey.100'},children:[/*#__PURE__*/_jsx(CircularProgress,{size:12}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{ml:1},children:\"Digitando...\"})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(Box,{sx:{p:2,borderTop:1,borderColor:'divider'},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,maxRows:3,placeholder:\"Digite sua mensagem...\",value:message,onChange:e=>setMessage(e.target.value),onKeyPress:handleKeyPress,InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:handleSendMessage,disabled:!message.trim(),children:/*#__PURE__*/_jsx(SendIcon,{})})})}})})]}):/*#__PURE__*/_jsx(Paper,{sx:{height:'100%',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",gutterBottom:true,children:\"Selecione uma conversa\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Escolha uma conversa da lista para come\\xE7ar a trocar mensagens\"})]})})})]})]});};export default MessagesPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Container","Paper","List","ListItem","ListItemAvatar","ListItemText","Avatar","Typography","TextField","IconButton","Badge","Grid","Chip","InputAdornment","CircularProgress","Send","SendIcon","Search","SearchIcon","VideoCall","VideoCallIcon","Phone","PhoneIcon","MoreVert","MoreVertIcon","useSelector","jsx","_jsx","jsxs","_jsxs","MessagesPage","user","state","auth","selectedChat","setSelectedChat","message","setMessage","messages","setMessages","chats","setChats","searchQuery","setSearchQuery","loading","setLoading","typing","setTyping","messagesEndRef","wsRef","mockChats","id","participantId","participantName","participantAvatar","lastMessage","lastMessageTime","Date","now","unreadCount","isOnline","eventId","eventName","mockMessages","senderId","senderName","content","timestamp","isRead","firstName","length","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","formatTime","date","diff","getTime","minutes","Math","floor","hours","days","concat","handleSendMessage","trim","newMessage","prev","setTimeout","responseMessage","handleKeyPress","e","key","shiftKey","preventDefault","filteredChats","filter","chat","_chat$eventName","toLowerCase","includes","maxWidth","sx","py","children","variant","gutterBottom","mb","fontWeight","container","spacing","height","item","xs","md","display","flexDirection","p","borderBottom","borderColor","fullWidth","size","placeholder","value","onChange","target","InputProps","startAdornment","position","flex","overflow","map","button","selected","onClick","backgroundColor","color","invisible","anchorOrigin","vertical","horizontal","src","charAt","primary","justifyContent","alignItems","noWrap","secondary","label","badgeContent","gap","msg","mt","opacity","toLocaleTimeString","width","ml","ref","borderTop","multiline","maxRows","onKeyPress","endAdornment","disabled","textAlign"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/src/pages/MessagesPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Container,\n  Paper,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Typography,\n  TextField,\n  IconButton,\n  Divider,\n  Badge,\n  Grid,\n  Chip,\n  Card,\n  CardContent,\n  Button,\n  InputAdornment,\n  CircularProgress\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  Search as SearchIcon,\n  PersonAdd as PersonAddIcon,\n  VideoCall as VideoCallIcon,\n  Phone as PhoneIcon,\n  MoreVert as MoreVertIcon\n} from '@mui/icons-material';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store/store';\n\ninterface Message {\n  id: number;\n  senderId: number;\n  senderName: string;\n  senderAvatar?: string;\n  content: string;\n  timestamp: Date;\n  isRead: boolean;\n}\n\ninterface Chat {\n  id: number;\n  participantId: number;\n  participantName: string;\n  participantAvatar?: string;\n  lastMessage?: string;\n  lastMessageTime?: Date;\n  unreadCount: number;\n  isOnline: boolean;\n  eventId?: number;\n  eventName?: string;\n}\n\nconst MessagesPage: React.FC = () => {\n  const { user } = useSelector((state: RootState) => state.auth);\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const wsRef = useRef<WebSocket | null>(null);\n\n  // Chats mockados para demonstração\n  const mockChats: Chat[] = [\n    {\n      id: 1,\n      participantId: 2,\n      participantName: 'João Silva',\n      participantAvatar: '/avatars/joao.jpg',\n      lastMessage: 'Vamos confirmar o churrasco para sábado?',\n      lastMessageTime: new Date(Date.now() - 5 * 60 * 1000),\n      unreadCount: 2,\n      isOnline: true,\n      eventId: 1,\n      eventName: 'Churrasco de Fim de Semana'\n    },\n    {\n      id: 2,\n      participantId: 3,\n      participantName: 'Maria Santos',\n      participantAvatar: '/avatars/maria.jpg',\n      lastMessage: 'Preciso confirmar quantas pessoas vão...',\n      lastMessageTime: new Date(Date.now() - 20 * 60 * 1000),\n      unreadCount: 0,\n      isOnline: true\n    },\n    {\n      id: 3,\n      participantId: 4,\n      participantName: 'Pedro Costa',\n      participantAvatar: '/avatars/pedro.jpg',\n      lastMessage: 'A festa foi incrível! Obrigado pela organização 🎉',\n      lastMessageTime: new Date(Date.now() - 2 * 60 * 60 * 1000),\n      unreadCount: 0,\n      isOnline: false\n    }\n  ];\n\n  const mockMessages: Message[] = [\n    {\n      id: 1,\n      senderId: 2,\n      senderName: 'João Silva',\n      content: 'Oi! Como está o planejamento do churrasco?',\n      timestamp: new Date(Date.now() - 60 * 60 * 1000),\n      isRead: true\n    },\n    {\n      id: 2,\n      senderId: user?.id || 1,\n      senderName: user?.firstName || 'Você',\n      content: 'Oi João! Está indo bem. Já confirmaram 15 pessoas.',\n      timestamp: new Date(Date.now() - 50 * 60 * 1000),\n      isRead: true\n    },\n    {\n      id: 3,\n      senderId: 2,\n      senderName: 'João Silva',\n      content: 'Perfeito! Vou levar a churrasqueira portátil e o carvão.',\n      timestamp: new Date(Date.now() - 30 * 60 * 1000),\n      isRead: true\n    },\n    {\n      id: 4,\n      senderId: 2,\n      senderName: 'João Silva',\n      content: 'Vamos confirmar o churrasco para sábado?',\n      timestamp: new Date(Date.now() - 5 * 60 * 1000),\n      isRead: false\n    }\n  ];\n\n  useEffect(() => {\n    setChats(mockChats);\n    if (mockChats.length > 0) {\n      setSelectedChat(mockChats[0]);\n      setMessages(mockMessages);\n    }\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const formatTime = (date: Date) => {\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n\n    if (minutes < 60) {\n      return `${minutes}min`;\n    } else if (hours < 24) {\n      return `${hours}h`;\n    } else {\n      return `${days}d`;\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!message.trim() || !selectedChat) return;\n\n    const newMessage: Message = {\n      id: messages.length + 1,\n      senderId: user?.id || 1,\n      senderName: user?.firstName || 'Você',\n      content: message,\n      timestamp: new Date(),\n      isRead: false\n    };\n\n    setMessages(prev => [...prev, newMessage]);\n    setMessage('');\n\n    // Simular resposta automática para demonstração\n    setTimeout(() => {\n      const responseMessage: Message = {\n        id: messages.length + 2,\n        senderId: selectedChat.participantId,\n        senderName: selectedChat.participantName,\n        content: 'Mensagem recebida! 👍',\n        timestamp: new Date(),\n        isRead: false\n      };\n      setMessages(prev => [...prev, responseMessage]);\n    }, 2000);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const filteredChats = chats.filter(chat =>\n    chat.participantName.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    chat.eventName?.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ py: 3 }}>\n      <Typography variant=\"h4\" gutterBottom sx={{ mb: 3, fontWeight: 600 }}>\n        💬 Mensagens\n      </Typography>\n\n      <Grid container spacing={2} sx={{ height: 'calc(100vh - 200px)' }}>\n        {/* Lista de Chats */}\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n            {/* Header de Pesquisa */}\n            <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\n              <TextField\n                fullWidth\n                size=\"small\"\n                placeholder=\"Buscar conversas...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Box>\n\n            {/* Lista de Conversas */}\n            <List sx={{ flex: 1, overflow: 'auto', p: 0 }}>\n              {filteredChats.map((chat) => (\n                <ListItem\n                  key={chat.id}\n                  button\n                  selected={selectedChat?.id === chat.id}\n                  onClick={() => {\n                    setSelectedChat(chat);\n                    setMessages(mockMessages);\n                  }}\n                  sx={{\n                    borderBottom: 1,\n                    borderColor: 'divider',\n                    '&.Mui-selected': {\n                      backgroundColor: 'primary.light',\n                      '&:hover': {\n                        backgroundColor: 'primary.light',\n                      },\n                    },\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Badge\n                      color=\"success\"\n                      variant=\"dot\"\n                      invisible={!chat.isOnline}\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                      }}\n                    >\n                      <Avatar src={chat.participantAvatar}>\n                        {chat.participantName.charAt(0)}\n                      </Avatar>\n                    </Badge>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Typography variant=\"subtitle2\" noWrap>\n                          {chat.participantName}\n                        </Typography>\n                        {chat.lastMessageTime && (\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            {formatTime(chat.lastMessageTime)}\n                          </Typography>\n                        )}\n                      </Box>\n                    }\n                    secondary={\n                      <Box>\n                        {chat.eventName && (\n                          <Chip\n                            size=\"small\"\n                            label={chat.eventName}\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            sx={{ mb: 0.5, maxWidth: '100%' }}\n                          />\n                        )}\n                        <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                          {chat.lastMessage}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                  {chat.unreadCount > 0 && (\n                    <Badge badgeContent={chat.unreadCount} color=\"error\" />\n                  )}\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </Grid>\n\n        {/* Área de Chat */}\n        <Grid item xs={12} md={8}>\n          {selectedChat ? (\n            <Paper sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n              {/* Header do Chat */}\n              <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Badge\n                      color=\"success\"\n                      variant=\"dot\"\n                      invisible={!selectedChat.isOnline}\n                    >\n                      <Avatar src={selectedChat.participantAvatar}>\n                        {selectedChat.participantName.charAt(0)}\n                      </Avatar>\n                    </Badge>\n                    <Box>\n                      <Typography variant=\"h6\">{selectedChat.participantName}</Typography>\n                      {selectedChat.eventName && (\n                        <Chip\n                          size=\"small\"\n                          label={selectedChat.eventName}\n                          color=\"primary\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {selectedChat.isOnline ? 'Online' : 'Offline'}\n                      </Typography>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <IconButton>\n                      <PhoneIcon />\n                    </IconButton>\n                    <IconButton>\n                      <VideoCallIcon />\n                    </IconButton>\n                    <IconButton>\n                      <MoreVertIcon />\n                    </IconButton>\n                  </Box>\n                </Box>\n              </Box>\n\n              {/* Mensagens */}\n              <Box sx={{ flex: 1, overflow: 'auto', p: 2 }}>\n                {messages.map((msg) => (\n                  <Box\n                    key={msg.id}\n                    sx={{\n                      display: 'flex',\n                      justifyContent: msg.senderId === user?.id ? 'flex-end' : 'flex-start',\n                      mb: 1,\n                    }}\n                  >\n                    <Paper\n                      sx={{\n                        p: 2,\n                        maxWidth: '70%',\n                        backgroundColor: msg.senderId === user?.id ? 'primary.main' : 'grey.100',\n                        color: msg.senderId === user?.id ? 'white' : 'text.primary',\n                      }}\n                    >\n                      <Typography variant=\"body2\">{msg.content}</Typography>\n                      <Typography\n                        variant=\"caption\"\n                        sx={{\n                          display: 'block',\n                          mt: 0.5,\n                          opacity: 0.7,\n                        }}\n                      >\n                        {msg.timestamp.toLocaleTimeString()}\n                      </Typography>\n                    </Paper>\n                  </Box>\n                ))}\n                                 {typing && (\n                   <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 1 }}>\n                     <Avatar src={selectedChat.participantAvatar} sx={{ width: 24, height: 24 }}>\n                       {selectedChat.participantName.charAt(0)}\n                     </Avatar>\n                    <Paper sx={{ p: 1, backgroundColor: 'grey.100' }}>\n                      <CircularProgress size={12} />\n                      <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                        Digitando...\n                      </Typography>\n                    </Paper>\n                  </Box>\n                )}\n                <div ref={messagesEndRef} />\n              </Box>\n\n              {/* Input de Mensagem */}\n              <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  maxRows={3}\n                  placeholder=\"Digite sua mensagem...\"\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          color=\"primary\"\n                          onClick={handleSendMessage}\n                          disabled={!message.trim()}\n                        >\n                          <SendIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Box>\n            </Paper>\n          ) : (\n            <Paper sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <Box sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                  Selecione uma conversa\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Escolha uma conversa da lista para começar a trocar mensagens\n                </Typography>\n              </Box>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default MessagesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}