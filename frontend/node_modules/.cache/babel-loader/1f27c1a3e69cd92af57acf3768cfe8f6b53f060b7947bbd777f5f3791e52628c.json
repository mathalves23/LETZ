{"ast":null,"code":"var _jsxFileName = \"/Users/mdearaujo/Downloads/LETZ/frontend/src/pages/MessagesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Container, Paper, List, ListItem, ListItemAvatar, ListItemText, Avatar, Typography, TextField, IconButton, Badge, Grid, Chip, InputAdornment, CircularProgress } from '@mui/material';\nimport { Send as SendIcon, Search as SearchIcon, VideoCall as VideoCallIcon, Phone as PhoneIcon, MoreVert as MoreVertIcon } from '@mui/icons-material';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesPage = () => {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const wsRef = useRef(null);\n\n  // Chats mockados para demonstração\n  const mockChats = [{\n    id: 1,\n    participantId: 2,\n    participantName: 'João Silva',\n    participantAvatar: '/avatars/joao.jpg',\n    lastMessage: 'Vamos confirmar o churrasco para sábado?',\n    lastMessageTime: new Date(Date.now() - 5 * 60 * 1000),\n    unreadCount: 2,\n    isOnline: true,\n    eventId: 1,\n    eventName: 'Churrasco de Fim de Semana'\n  }, {\n    id: 2,\n    participantId: 3,\n    participantName: 'Maria Santos',\n    participantAvatar: '/avatars/maria.jpg',\n    lastMessage: 'Preciso confirmar quantas pessoas vão...',\n    lastMessageTime: new Date(Date.now() - 20 * 60 * 1000),\n    unreadCount: 0,\n    isOnline: true\n  }, {\n    id: 3,\n    participantId: 4,\n    participantName: 'Pedro Costa',\n    participantAvatar: '/avatars/pedro.jpg',\n    lastMessage: 'A festa foi incrível! Obrigado pela organização 🎉',\n    lastMessageTime: new Date(Date.now() - 2 * 60 * 60 * 1000),\n    unreadCount: 0,\n    isOnline: false\n  }];\n  const mockMessages = [{\n    id: 1,\n    senderId: 2,\n    senderName: 'João Silva',\n    content: 'Oi! Como está o planejamento do churrasco?',\n    timestamp: new Date(Date.now() - 60 * 60 * 1000),\n    isRead: true\n  }, {\n    id: 2,\n    senderId: (user === null || user === void 0 ? void 0 : user.id) || 1,\n    senderName: (user === null || user === void 0 ? void 0 : user.firstName) || 'Você',\n    content: 'Oi João! Está indo bem. Já confirmaram 15 pessoas.',\n    timestamp: new Date(Date.now() - 50 * 60 * 1000),\n    isRead: true\n  }, {\n    id: 3,\n    senderId: 2,\n    senderName: 'João Silva',\n    content: 'Perfeito! Vou levar a churrasqueira portátil e o carvão.',\n    timestamp: new Date(Date.now() - 30 * 60 * 1000),\n    isRead: true\n  }, {\n    id: 4,\n    senderId: 2,\n    senderName: 'João Silva',\n    content: 'Vamos confirmar o churrasco para sábado?',\n    timestamp: new Date(Date.now() - 5 * 60 * 1000),\n    isRead: false\n  }];\n  useEffect(() => {\n    setChats(mockChats);\n    if (mockChats.length > 0) {\n      setSelectedChat(mockChats[0]);\n      setMessages(mockMessages);\n    }\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const formatTime = date => {\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    if (minutes < 60) {\n      return `${minutes}min`;\n    } else if (hours < 24) {\n      return `${hours}h`;\n    } else {\n      return `${days}d`;\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!message.trim() || !selectedChat) return;\n    const newMessage = {\n      id: messages.length + 1,\n      senderId: (user === null || user === void 0 ? void 0 : user.id) || 1,\n      senderName: (user === null || user === void 0 ? void 0 : user.firstName) || 'Você',\n      content: message,\n      timestamp: new Date(),\n      isRead: false\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setMessage('');\n\n    // Simular resposta automática para demonstração\n    setTimeout(() => {\n      const responseMessage = {\n        id: messages.length + 2,\n        senderId: selectedChat.participantId,\n        senderName: selectedChat.participantName,\n        content: 'Mensagem recebida! 👍',\n        timestamp: new Date(),\n        isRead: false\n      };\n      setMessages(prev => [...prev, responseMessage]);\n    }, 2000);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const filteredChats = chats.filter(chat => {\n    var _chat$eventName;\n    return chat.participantName.toLowerCase().includes(searchQuery.toLowerCase()) || ((_chat$eventName = chat.eventName) === null || _chat$eventName === void 0 ? void 0 : _chat$eventName.toLowerCase().includes(searchQuery.toLowerCase()));\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      py: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        mb: 3,\n        fontWeight: 600\n      },\n      children: \"\\uD83D\\uDCAC Mensagens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        height: 'calc(100vh - 200px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderBottom: 1,\n              borderColor: 'divider'\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              size: \"small\",\n              placeholder: \"Buscar conversas...\",\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              flex: 1,\n              overflow: 'auto',\n              p: 0\n            },\n            children: filteredChats.map(chat => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              selected: (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id) === chat.id,\n              onClick: () => {\n                setSelectedChat(chat);\n                setMessages(mockMessages);\n              },\n              sx: {\n                borderBottom: 1,\n                borderColor: 'divider',\n                '&.Mui-selected': {\n                  backgroundColor: 'primary.light',\n                  '&:hover': {\n                    backgroundColor: 'primary.light'\n                  }\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  color: \"success\",\n                  variant: \"dot\",\n                  invisible: !chat.isOnline,\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: chat.participantAvatar,\n                    children: chat.participantName.charAt(0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    noWrap: true,\n                    children: chat.participantName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 25\n                  }, this), chat.lastMessageTime && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: formatTime(chat.lastMessageTime)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [chat.eventName && /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: chat.eventName,\n                    color: \"primary\",\n                    variant: \"outlined\",\n                    sx: {\n                      mb: 0.5,\n                      maxWidth: '100%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    noWrap: true,\n                    children: chat.lastMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), chat.unreadCount > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n                badgeContent: chat.unreadCount,\n                color: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this)]\n            }, chat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderBottom: 1,\n              borderColor: 'divider'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  color: \"success\",\n                  variant: \"dot\",\n                  invisible: !selectedChat.isOnline,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: selectedChat.participantAvatar,\n                    children: selectedChat.participantName.charAt(0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: selectedChat.participantName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 23\n                  }, this), selectedChat.eventName && /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: selectedChat.eventName,\n                    color: \"primary\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: selectedChat.isOnline ? 'Online' : 'Offline'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(PhoneIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(VideoCallIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: 1,\n              overflow: 'auto',\n              p: 2\n            },\n            children: [messages.map(msg => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: msg.senderId === (user === null || user === void 0 ? void 0 : user.id) ? 'flex-end' : 'flex-start',\n                mb: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                sx: {\n                  p: 2,\n                  maxWidth: '70%',\n                  backgroundColor: msg.senderId === (user === null || user === void 0 ? void 0 : user.id) ? 'primary.main' : 'grey.100',\n                  color: msg.senderId === (user === null || user === void 0 ? void 0 : user.id) ? 'white' : 'text.primary'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  sx: {\n                    display: 'block',\n                    mt: 0.5,\n                    opacity: 0.7\n                  },\n                  children: msg.timestamp.toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this)\n            }, msg.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this)), typing && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1,\n                mt: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: selectedChat.participantAvatar,\n                sx: {\n                  width: 24,\n                  height: 24\n                },\n                children: selectedChat.participantName.charAt(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                sx: {\n                  p: 1,\n                  backgroundColor: 'grey.100'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  sx: {\n                    ml: 1\n                  },\n                  children: \"Digitando...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderTop: 1,\n              borderColor: 'divider'\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              maxRows: 3,\n              placeholder: \"Digite sua mensagem...\",\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              onKeyPress: handleKeyPress,\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    onClick: handleSendMessage,\n                    disabled: !message.trim(),\n                    children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 23\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: \"Selecione uma conversa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Escolha uma conversa da lista para come\\xE7ar a trocar mensagens\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesPage, \"oh2J4wuR/Aw7mai7aFY2RxqE9es=\", false, function () {\n  return [useSelector];\n});\n_c = MessagesPage;\nexport default MessagesPage;\nvar _c;\n$RefreshReg$(_c, \"MessagesPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Container","Paper","List","ListItem","ListItemAvatar","ListItemText","Avatar","Typography","TextField","IconButton","Badge","Grid","Chip","InputAdornment","CircularProgress","Send","SendIcon","Search","SearchIcon","VideoCall","VideoCallIcon","Phone","PhoneIcon","MoreVert","MoreVertIcon","useSelector","jsxDEV","_jsxDEV","MessagesPage","_s","user","state","auth","selectedChat","setSelectedChat","message","setMessage","messages","setMessages","chats","setChats","searchQuery","setSearchQuery","loading","setLoading","typing","setTyping","messagesEndRef","wsRef","mockChats","id","participantId","participantName","participantAvatar","lastMessage","lastMessageTime","Date","now","unreadCount","isOnline","eventId","eventName","mockMessages","senderId","senderName","content","timestamp","isRead","firstName","length","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","formatTime","date","diff","getTime","minutes","Math","floor","hours","days","handleSendMessage","trim","newMessage","prev","setTimeout","responseMessage","handleKeyPress","e","key","shiftKey","preventDefault","filteredChats","filter","chat","_chat$eventName","toLowerCase","includes","maxWidth","sx","py","children","variant","gutterBottom","mb","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","height","item","xs","md","display","flexDirection","p","borderBottom","borderColor","fullWidth","size","placeholder","value","onChange","target","InputProps","startAdornment","position","flex","overflow","map","button","selected","onClick","backgroundColor","color","invisible","anchorOrigin","vertical","horizontal","src","charAt","primary","justifyContent","alignItems","noWrap","secondary","label","badgeContent","gap","msg","mt","opacity","toLocaleTimeString","width","ml","ref","borderTop","multiline","maxRows","onKeyPress","endAdornment","disabled","textAlign","_c","$RefreshReg$"],"sources":["/Users/mdearaujo/Downloads/LETZ/frontend/src/pages/MessagesPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Container,\n  Paper,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Typography,\n  TextField,\n  IconButton,\n  Divider,\n  Badge,\n  Grid,\n  Chip,\n  Card,\n  CardContent,\n  Button,\n  InputAdornment,\n  CircularProgress\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  Search as SearchIcon,\n  PersonAdd as PersonAddIcon,\n  VideoCall as VideoCallIcon,\n  Phone as PhoneIcon,\n  MoreVert as MoreVertIcon\n} from '@mui/icons-material';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store/store';\n\ninterface Message {\n  id: number;\n  senderId: number;\n  senderName: string;\n  senderAvatar?: string;\n  content: string;\n  timestamp: Date;\n  isRead: boolean;\n}\n\ninterface Chat {\n  id: number;\n  participantId: number;\n  participantName: string;\n  participantAvatar?: string;\n  lastMessage?: string;\n  lastMessageTime?: Date;\n  unreadCount: number;\n  isOnline: boolean;\n  eventId?: number;\n  eventName?: string;\n}\n\nconst MessagesPage: React.FC = () => {\n  const { user } = useSelector((state: RootState) => state.auth);\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const wsRef = useRef<WebSocket | null>(null);\n\n  // Chats mockados para demonstração\n  const mockChats: Chat[] = [\n    {\n      id: 1,\n      participantId: 2,\n      participantName: 'João Silva',\n      participantAvatar: '/avatars/joao.jpg',\n      lastMessage: 'Vamos confirmar o churrasco para sábado?',\n      lastMessageTime: new Date(Date.now() - 5 * 60 * 1000),\n      unreadCount: 2,\n      isOnline: true,\n      eventId: 1,\n      eventName: 'Churrasco de Fim de Semana'\n    },\n    {\n      id: 2,\n      participantId: 3,\n      participantName: 'Maria Santos',\n      participantAvatar: '/avatars/maria.jpg',\n      lastMessage: 'Preciso confirmar quantas pessoas vão...',\n      lastMessageTime: new Date(Date.now() - 20 * 60 * 1000),\n      unreadCount: 0,\n      isOnline: true\n    },\n    {\n      id: 3,\n      participantId: 4,\n      participantName: 'Pedro Costa',\n      participantAvatar: '/avatars/pedro.jpg',\n      lastMessage: 'A festa foi incrível! Obrigado pela organização 🎉',\n      lastMessageTime: new Date(Date.now() - 2 * 60 * 60 * 1000),\n      unreadCount: 0,\n      isOnline: false\n    }\n  ];\n\n  const mockMessages: Message[] = [\n    {\n      id: 1,\n      senderId: 2,\n      senderName: 'João Silva',\n      content: 'Oi! Como está o planejamento do churrasco?',\n      timestamp: new Date(Date.now() - 60 * 60 * 1000),\n      isRead: true\n    },\n    {\n      id: 2,\n      senderId: user?.id || 1,\n      senderName: user?.firstName || 'Você',\n      content: 'Oi João! Está indo bem. Já confirmaram 15 pessoas.',\n      timestamp: new Date(Date.now() - 50 * 60 * 1000),\n      isRead: true\n    },\n    {\n      id: 3,\n      senderId: 2,\n      senderName: 'João Silva',\n      content: 'Perfeito! Vou levar a churrasqueira portátil e o carvão.',\n      timestamp: new Date(Date.now() - 30 * 60 * 1000),\n      isRead: true\n    },\n    {\n      id: 4,\n      senderId: 2,\n      senderName: 'João Silva',\n      content: 'Vamos confirmar o churrasco para sábado?',\n      timestamp: new Date(Date.now() - 5 * 60 * 1000),\n      isRead: false\n    }\n  ];\n\n  useEffect(() => {\n    setChats(mockChats);\n    if (mockChats.length > 0) {\n      setSelectedChat(mockChats[0]);\n      setMessages(mockMessages);\n    }\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const formatTime = (date: Date) => {\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n\n    if (minutes < 60) {\n      return `${minutes}min`;\n    } else if (hours < 24) {\n      return `${hours}h`;\n    } else {\n      return `${days}d`;\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!message.trim() || !selectedChat) return;\n\n    const newMessage: Message = {\n      id: messages.length + 1,\n      senderId: user?.id || 1,\n      senderName: user?.firstName || 'Você',\n      content: message,\n      timestamp: new Date(),\n      isRead: false\n    };\n\n    setMessages(prev => [...prev, newMessage]);\n    setMessage('');\n\n    // Simular resposta automática para demonstração\n    setTimeout(() => {\n      const responseMessage: Message = {\n        id: messages.length + 2,\n        senderId: selectedChat.participantId,\n        senderName: selectedChat.participantName,\n        content: 'Mensagem recebida! 👍',\n        timestamp: new Date(),\n        isRead: false\n      };\n      setMessages(prev => [...prev, responseMessage]);\n    }, 2000);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const filteredChats = chats.filter(chat =>\n    chat.participantName.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    chat.eventName?.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ py: 3 }}>\n      <Typography variant=\"h4\" gutterBottom sx={{ mb: 3, fontWeight: 600 }}>\n        💬 Mensagens\n      </Typography>\n\n      <Grid container spacing={2} sx={{ height: 'calc(100vh - 200px)' }}>\n        {/* Lista de Chats */}\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n            {/* Header de Pesquisa */}\n            <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\n              <TextField\n                fullWidth\n                size=\"small\"\n                placeholder=\"Buscar conversas...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Box>\n\n            {/* Lista de Conversas */}\n            <List sx={{ flex: 1, overflow: 'auto', p: 0 }}>\n              {filteredChats.map((chat) => (\n                <ListItem\n                  key={chat.id}\n                  button\n                  selected={selectedChat?.id === chat.id}\n                  onClick={() => {\n                    setSelectedChat(chat);\n                    setMessages(mockMessages);\n                  }}\n                  sx={{\n                    borderBottom: 1,\n                    borderColor: 'divider',\n                    '&.Mui-selected': {\n                      backgroundColor: 'primary.light',\n                      '&:hover': {\n                        backgroundColor: 'primary.light',\n                      },\n                    },\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Badge\n                      color=\"success\"\n                      variant=\"dot\"\n                      invisible={!chat.isOnline}\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                      }}\n                    >\n                      <Avatar src={chat.participantAvatar}>\n                        {chat.participantName.charAt(0)}\n                      </Avatar>\n                    </Badge>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Typography variant=\"subtitle2\" noWrap>\n                          {chat.participantName}\n                        </Typography>\n                        {chat.lastMessageTime && (\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            {formatTime(chat.lastMessageTime)}\n                          </Typography>\n                        )}\n                      </Box>\n                    }\n                    secondary={\n                      <Box>\n                        {chat.eventName && (\n                          <Chip\n                            size=\"small\"\n                            label={chat.eventName}\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            sx={{ mb: 0.5, maxWidth: '100%' }}\n                          />\n                        )}\n                        <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                          {chat.lastMessage}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                  {chat.unreadCount > 0 && (\n                    <Badge badgeContent={chat.unreadCount} color=\"error\" />\n                  )}\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </Grid>\n\n        {/* Área de Chat */}\n        <Grid item xs={12} md={8}>\n          {selectedChat ? (\n            <Paper sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n              {/* Header do Chat */}\n              <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Badge\n                      color=\"success\"\n                      variant=\"dot\"\n                      invisible={!selectedChat.isOnline}\n                    >\n                      <Avatar src={selectedChat.participantAvatar}>\n                        {selectedChat.participantName.charAt(0)}\n                      </Avatar>\n                    </Badge>\n                    <Box>\n                      <Typography variant=\"h6\">{selectedChat.participantName}</Typography>\n                      {selectedChat.eventName && (\n                        <Chip\n                          size=\"small\"\n                          label={selectedChat.eventName}\n                          color=\"primary\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {selectedChat.isOnline ? 'Online' : 'Offline'}\n                      </Typography>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <IconButton>\n                      <PhoneIcon />\n                    </IconButton>\n                    <IconButton>\n                      <VideoCallIcon />\n                    </IconButton>\n                    <IconButton>\n                      <MoreVertIcon />\n                    </IconButton>\n                  </Box>\n                </Box>\n              </Box>\n\n              {/* Mensagens */}\n              <Box sx={{ flex: 1, overflow: 'auto', p: 2 }}>\n                {messages.map((msg) => (\n                  <Box\n                    key={msg.id}\n                    sx={{\n                      display: 'flex',\n                      justifyContent: msg.senderId === user?.id ? 'flex-end' : 'flex-start',\n                      mb: 1,\n                    }}\n                  >\n                    <Paper\n                      sx={{\n                        p: 2,\n                        maxWidth: '70%',\n                        backgroundColor: msg.senderId === user?.id ? 'primary.main' : 'grey.100',\n                        color: msg.senderId === user?.id ? 'white' : 'text.primary',\n                      }}\n                    >\n                      <Typography variant=\"body2\">{msg.content}</Typography>\n                      <Typography\n                        variant=\"caption\"\n                        sx={{\n                          display: 'block',\n                          mt: 0.5,\n                          opacity: 0.7,\n                        }}\n                      >\n                        {msg.timestamp.toLocaleTimeString()}\n                      </Typography>\n                    </Paper>\n                  </Box>\n                ))}\n                                 {typing && (\n                   <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 1 }}>\n                     <Avatar src={selectedChat.participantAvatar} sx={{ width: 24, height: 24 }}>\n                       {selectedChat.participantName.charAt(0)}\n                     </Avatar>\n                    <Paper sx={{ p: 1, backgroundColor: 'grey.100' }}>\n                      <CircularProgress size={12} />\n                      <Typography variant=\"caption\" sx={{ ml: 1 }}>\n                        Digitando...\n                      </Typography>\n                    </Paper>\n                  </Box>\n                )}\n                <div ref={messagesEndRef} />\n              </Box>\n\n              {/* Input de Mensagem */}\n              <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  maxRows={3}\n                  placeholder=\"Digite sua mensagem...\"\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          color=\"primary\"\n                          onClick={handleSendMessage}\n                          disabled={!message.trim()}\n                        >\n                          <SendIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Box>\n            </Paper>\n          ) : (\n            <Paper sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <Box sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                  Selecione uma conversa\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Escolha uma conversa da lista para começar a trocar mensagens\n                </Typography>\n              </Box>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default MessagesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}